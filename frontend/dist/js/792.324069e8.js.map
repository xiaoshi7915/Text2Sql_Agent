{"version":3,"file":"js/792.324069e8.js","mappings":"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","sources":["webpack://wenshu-mcp-frontend/./src/views/datasource/DataSourceForm.vue","webpack://wenshu-mcp-frontend/./src/views/datasource/DataSourceForm.vue?0377"],"sourcesContent":["<template>\n  <div class=\"datasource-form-container\">\n    <el-card>\n      <template #header>\n        <div class=\"card-header\">\n          <h3>{{ isEdit ? '编辑数据源' : '新建数据源' }}</h3>\n        </div>\n      </template>\n      \n      <el-form \n        ref=\"formRef\" \n        :model=\"form\" \n        :rules=\"rules\" \n        label-width=\"120px\" \n        class=\"datasource-form\"\n        v-loading=\"loading\"\n      >\n        <!-- 基本信息部分 -->\n        <h4 class=\"form-section-title\">基本信息</h4>\n        \n        <el-form-item label=\"数据源名称\" prop=\"name\">\n          <el-input v-model=\"form.name\" placeholder=\"请输入数据源名称\" />\n        </el-form-item>\n        \n        <el-form-item label=\"数据库类型\" prop=\"type\">\n          <el-select v-model=\"form.type\" placeholder=\"请选择数据库类型\" style=\"width: 100%\">\n            <el-option v-for=\"item in dbTypeOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"描述\">\n          <el-input v-model=\"form.description\" type=\"textarea\" :rows=\"4\" placeholder=\"请输入数据源描述信息\" />\n        </el-form-item>\n        \n        <!-- 连接信息部分 -->\n        <h4 class=\"form-section-title\">连接信息</h4>\n        \n        <el-form-item label=\"主机地址\" prop=\"host\">\n          <el-input v-model=\"form.host\" placeholder=\"请输入主机地址\" />\n        </el-form-item>\n        \n        <el-form-item label=\"端口\" prop=\"port\">\n          <el-input-number v-model=\"form.port\" :min=\"1\" :max=\"65535\" controls-position=\"right\" style=\"width: 100%\" />\n        </el-form-item>\n        \n        <el-form-item label=\"数据库名称\" prop=\"database\">\n          <el-input v-model=\"form.database\" placeholder=\"请输入数据库名称\" />\n        </el-form-item>\n        \n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"form.username\" placeholder=\"请输入用户名\" />\n        </el-form-item>\n        \n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input v-model=\"form.password\" type=\"password\" placeholder=\"请输入密码\" show-password />\n        </el-form-item>\n        \n        <!-- 高级配置部分 -->\n        <h4 class=\"form-section-title\">\n          <el-button link type=\"primary\" @click=\"showAdvanced = !showAdvanced\">\n            <el-icon v-if=\"showAdvanced\"><icon-arrow-down /></el-icon>\n            <el-icon v-else><icon-arrow-right /></el-icon>\n            高级配置\n          </el-button>\n        </h4>\n        \n        <div v-if=\"showAdvanced\">\n          <el-form-item label=\"连接超时(秒)\">\n            <el-input-number v-model=\"form.timeout\" :min=\"1\" :max=\"300\" controls-position=\"right\" style=\"width: 100%\" />\n          </el-form-item>\n          \n          <el-form-item label=\"连接池大小\">\n            <el-input-number v-model=\"form.poolSize\" :min=\"1\" :max=\"100\" controls-position=\"right\" style=\"width: 100%\" />\n          </el-form-item>\n          \n          <el-form-item label=\"字符集\">\n            <el-select v-model=\"form.charset\" placeholder=\"请选择字符集\" style=\"width: 100%\">\n              <el-option label=\"UTF-8\" value=\"utf8\" />\n              <el-option label=\"GBK\" value=\"gbk\" />\n              <el-option label=\"UTF-16\" value=\"utf16\" />\n              <el-option label=\"ASCII\" value=\"ascii\" />\n            </el-select>\n          </el-form-item>\n          \n          <el-form-item label=\"元数据刷新\">\n            <el-select v-model=\"form.metadataRefresh\" placeholder=\"请选择元数据刷新方式\" style=\"width: 100%\">\n              <el-option label=\"手动\" value=\"manual\" />\n              <el-option label=\"每天\" value=\"daily\" />\n              <el-option label=\"每周\" value=\"weekly\" />\n              <el-option label=\"每月\" value=\"monthly\" />\n            </el-select>\n          </el-form-item>\n          \n          <el-form-item label=\"SSL连接\">\n            <el-switch v-model=\"form.useSSL\" />\n          </el-form-item>\n        </div>\n        \n        <!-- 操作按钮 -->\n        <div class=\"form-actions\">\n          <el-button @click=\"handleCancel\">取消</el-button>\n          <el-button type=\"primary\" @click=\"handleSubmit\">保存</el-button>\n          <el-button type=\"success\" @click=\"handleTest\">测试连接</el-button>\n        </div>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed, onMounted } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\n\nexport default {\n  name: 'DataSourceForm',\n  \n  props: {\n    id: {\n      type: [String, Number],\n      required: false\n    }\n  },\n  \n  setup(props) {\n    // 路由相关\n    const route = useRoute()\n    const router = useRouter()\n    \n    // 表单引用\n    const formRef = ref(null)\n    \n    // 加载状态\n    const loading = ref(false)\n    \n    // 是否显示高级配置\n    const showAdvanced = ref(false)\n    \n    // 是否为编辑模式\n    const isEdit = computed(() => {\n      return !!props.id || !!route.params.id\n    })\n    \n    // 当前编辑的数据源ID\n    const currentId = computed(() => {\n      return props.id || route.params.id\n    })\n    \n    // 数据库类型选项\n    const dbTypeOptions = [\n      { value: 'MySQL', label: 'MySQL' },\n      { value: 'PostgreSQL', label: 'PostgreSQL' },\n      { value: 'SQLServer', label: 'SQL Server' },\n      { value: 'Oracle', label: 'Oracle' }\n    ]\n    \n    // 表单数据\n    const form = reactive({\n      name: '',\n      type: 'MySQL',\n      description: '',\n      host: '',\n      port: 3306,\n      database: '',\n      username: '',\n      password: '',\n      timeout: 30,\n      poolSize: 10,\n      charset: 'utf8',\n      metadataRefresh: 'manual',\n      useSSL: false\n    })\n    \n    // 表单验证规则\n    const rules = {\n      name: [\n        { required: true, message: '请输入数据源名称', trigger: 'blur' },\n        { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n      ],\n      type: [\n        { required: true, message: '请选择数据库类型', trigger: 'change' }\n      ],\n      host: [\n        { required: true, message: '请输入主机地址', trigger: 'blur' }\n      ],\n      port: [\n        { required: true, message: '请输入端口号', trigger: 'blur' },\n        { type: 'number', message: '端口必须为数字', trigger: 'blur' }\n      ],\n      database: [\n        { required: true, message: '请输入数据库名称', trigger: 'blur' }\n      ],\n      username: [\n        { required: true, message: '请输入用户名', trigger: 'blur' }\n      ],\n      password: [\n        { required: !isEdit.value, message: '请输入密码', trigger: 'blur' }\n      ]\n    }\n    \n    // 根据数据库类型设置默认端口\n    const setDefaultPort = (type) => {\n      const portMap = {\n        'MySQL': 3306,\n        'PostgreSQL': 5432,\n        'SQLServer': 1433,\n        'Oracle': 1521\n      }\n      form.port = portMap[type] || 3306\n    }\n    \n    // 监听数据库类型变化\n    const watchDbTypeChange = () => {\n      setDefaultPort(form.type)\n    }\n    \n    // 获取数据源详情\n    const fetchDataSource = async () => {\n      if (!isEdit.value) return\n      \n      loading.value = true\n      \n      try {\n        // 模拟API调用\n        setTimeout(() => {\n          // 实际项目中应该调用API获取数据\n          // const response = await api.getDataSourceById(currentId.value)\n          // const data = response.data\n          \n          // 模拟数据\n          const data = {\n            id: currentId.value,\n            name: '生产环境MySQL数据库',\n            type: 'MySQL',\n            description: '这是生产环境的主MySQL数据库，包含核心业务数据',\n            host: '192.168.1.100',\n            port: 3306,\n            database: 'production_db',\n            username: 'root',\n            password: '',  // 出于安全考虑，通常不会返回密码\n            timeout: 30,\n            poolSize: 10,\n            charset: 'utf8',\n            metadataRefresh: 'daily',\n            useSSL: true\n          }\n          \n          // 更新表单数据\n          Object.keys(form).forEach(key => {\n            if (data[key] !== undefined) {\n              form[key] = data[key]\n            }\n          })\n          \n          loading.value = false\n        }, 500)\n      } catch (error) {\n        console.error('获取数据源详情失败', error)\n        ElMessage.error('获取数据源详情失败')\n        loading.value = false\n      }\n    }\n    \n    // 提交表单\n    const handleSubmit = async () => {\n      if (!formRef.value) return\n      \n      formRef.value.validate(async (valid) => {\n        if (!valid) {\n          return false\n        }\n        \n        loading.value = true\n        \n        try {\n          // 模拟API调用\n          setTimeout(() => {\n            // 实际项目中应该调用API保存数据\n            // if (isEdit.value) {\n            //   await api.updateDataSource(currentId.value, form)\n            // } else {\n            //   await api.createDataSource(form)\n            // }\n            \n            loading.value = false\n            \n            ElMessage({\n              message: isEdit.value ? '数据源更新成功' : '数据源创建成功',\n              type: 'success'\n            })\n            \n            // 跳转到列表页\n            router.push('/datasource/list')\n          }, 1000)\n        } catch (error) {\n          console.error('保存数据源失败', error)\n          ElMessage.error('保存数据源失败')\n          loading.value = false\n        }\n      })\n    }\n    \n    // 测试连接\n    const handleTest = async () => {\n      if (!formRef.value) return\n      \n      formRef.value.validate(async (valid) => {\n        if (!valid) {\n          return false\n        }\n        \n        loading.value = true\n        \n        try {\n          // 模拟API调用\n          setTimeout(() => {\n            // 实际项目中应该调用API测试连接\n            // await api.testDataSourceConnection(form)\n            \n            loading.value = false\n            \n            // 随机模拟成功或失败\n            const isSuccess = Math.random() > 0.3\n            \n            if (isSuccess) {\n              ElMessage({\n                message: '数据库连接成功',\n                type: 'success'\n              })\n            } else {\n              ElMessage({\n                message: '数据库连接失败，请检查配置',\n                type: 'error'\n              })\n            }\n          }, 1500)\n        } catch (error) {\n          console.error('测试连接失败', error)\n          ElMessage.error('测试连接失败')\n          loading.value = false\n        }\n      })\n    }\n    \n    // 取消操作\n    const handleCancel = () => {\n      router.push('/datasource/list')\n    }\n    \n    // 组件挂载时获取数据\n    onMounted(() => {\n      fetchDataSource()\n    })\n    \n    return {\n      formRef,\n      loading,\n      isEdit,\n      form,\n      rules,\n      dbTypeOptions,\n      showAdvanced,\n      handleSubmit,\n      handleTest,\n      handleCancel,\n      watchDbTypeChange\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.datasource-form-container {\n  max-width: 800px;\n  margin: 0 auto;\n  \n  .card-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    \n    h3 {\n      margin: 0;\n      color: #303133;\n    }\n  }\n  \n  .form-section-title {\n    margin: 20px 0 15px;\n    padding-bottom: 10px;\n    border-bottom: 1px solid #ebeef5;\n    color: #606266;\n  }\n  \n  .datasource-form {\n    .el-form-item {\n      margin-bottom: 22px;\n    }\n  }\n  \n  .form-actions {\n    display: flex;\n    justify-content: center;\n    gap: 15px;\n    margin-top: 30px;\n  }\n}\n\n@media (max-width: 768px) {\n  .datasource-form-container {\n    padding: 0 10px;\n    \n    .form-actions {\n      flex-direction: column;\n      \n      .el-button {\n        width: 100%;\n        margin-bottom: 10px;\n      }\n    }\n  }\n}\n</style> ","import { render } from \"./DataSourceForm.vue?vue&type=template&id=56cc0274&scoped=true\"\nimport script from \"./DataSourceForm.vue?vue&type=script&lang=js\"\nexport * from \"./DataSourceForm.vue?vue&type=script&lang=js\"\n\nimport \"./DataSourceForm.vue?vue&type=style&index=0&id=56cc0274&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56cc0274\"]])\n\nexport default __exports__"],"names":["class","key","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_createElementVNode","_hoisted_2","_toDisplayString","$setup","isEdit","default","_createBlock","_component_el_form","ref","model","form","rules","_component_el_form_item","label","prop","_component_el_input","modelValue","name","_cache","$event","placeholder","_","_component_el_select","type","style","_Fragment","_renderList","dbTypeOptions","item","_component_el_option","value","description","rows","host","_component_el_input_number","port","min","max","database","username","password","_hoisted_3","_component_el_button","link","onClick","showAdvanced","_component_el_icon","_component_icon_arrow_down","_component_icon_arrow_right","_createTextVNode","_hoisted_4","timeout","poolSize","charset","metadataRefresh","_component_el_switch","useSSL","_createCommentVNode","_hoisted_5","handleCancel","handleSubmit","handleTest","loading","props","id","String","Number","required","setup","route","useRoute","router","useRouter","formRef","computed","params","currentId","reactive","message","trigger","setDefaultPort","portMap","watchDbTypeChange","fetchDataSource","async","setTimeout","data","Object","keys","forEach","undefined","error","console","ElMessage","validate","valid","push","isSuccess","Math","random","onMounted","__exports__","render"],"sourceRoot":""}