{"version":3,"file":"js/481.e482bcf7.js","mappings":"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,GAA0B,oBAAfD,EAAK7e,MACd,OAAOuc,GAAQsC,EAAK7e,MAExB,CAEAwe,EAAS5C,GAAe4C,EAC1B,CAEA,SAASO,IACP,OAAO,IACT,CAEA,OAAOA,CACT,CC3MO,MAAMC,GAAOlD,GAAO,CACzB,IACA,OACA,UACA,UACA,OACA,UACA,QACA,QACA,IACA,MACA,MACA,MACA,QACA,aACA,OACA,KACA,SACA,SACA,UACA,SACA,OACA,OACA,MACA,WACA,UACA,OACA,WACA,KACA,YACA,MACA,UACA,MACA,SACA,MACA,MACA,KACA,KACA,UACA,KACA,WACA,aACA,SACA,OACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,MACA,QACA,MACA,MACA,QACA,SACA,KACA,OACA,MACA,OACA,UACA,OACA,WACA,QACA,MACA,OACA,KACA,WACA,SACA,SACA,IACA,UACA,MACA,WACA,IACA,KACA,KACA,OACA,IACA,OACA,UACA,SACA,SACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,WACA,QACA,KACA,QACA,OACA,KACA,QACA,KACA,IACA,KACA,MACA,QACA,QAGWmD,GAAMnD,GAAO,CACxB,MACA,IACA,WACA,cACA,eACA,eACA,gBACA,mBACA,SACA,WACA,OACA,OACA,UACA,SACA,OACA,IACA,QACA,WACA,QACA,QACA,OACA,iBACA,SACA,OACA,WACA,QACA,OACA,UACA,UACA,WACA,iBACA,OACA,OACA,QACA,SACA,SACA,OACA,WACA,QACA,OACA,QACA,OACA,UAGWoD,GAAapD,GAAO,CAC/B,UACA,gBACA,sBACA,cACA,mBACA,oBACA,oBACA,iBACA,eACA,UACA,UACA,UACA,UACA,UACA,iBACA,UACA,UACA,cACA,eACA,WACA,eACA,qBACA,cACA,SACA,iBAOWqD,GAAgBrD,GAAO,CAClC,UACA,gBACA,SACA,UACA,YACA,mBACA,iBACA,gBACA,gBACA,gBACA,QACA,YACA,OACA,eACA,YACA,UACA,gBACA,SACA,MACA,aACA,UACA,QAGWsD,GAAStD,GAAO,CAC3B,OACA,WACA,SACA,UACA,QACA,SACA,KACA,aACA,gBACA,KACA,KACA,QACA,UACA,WACA,QACA,OACA,KACA,SACA,QACA,SACA,OACA,OACA,UACA,SACA,MACA,QACA,MACA,SACA,aACA,gBAKWuD,GAAmBvD,GAAO,CACrC,UACA,cACA,aACA,WACA,YACA,UACA,UACA,SACA,SACA,QACA,YACA,aACA,iBACA,cACA,SAGWne,GAAOme,GAAO,CAAC,UCpRf5S,GAAO4S,GAAO,CACzB,SACA,SACA,QACA,MACA,iBACA,eACA,uBACA,WACA,aACA,UACA,SACA,UACA,cACA,cACA,UACA,OACA,QACA,QACA,QACA,OACA,UACA,WACA,eACA,SACA,cACA,WACA,WACA,UACA,MACA,WACA,0BACA,wBACA,WACA,YACA,UACA,eACA,OACA,MACA,UACA,SACA,SACA,OACA,OACA,WACA,KACA,YACA,YACA,QACA,OACA,QACA,OACA,OACA,UACA,OACA,MACA,MACA,YACA,QACA,SACA,MACA,YACA,WACA,QACA,OACA,QACA,UACA,aACA,SACA,OACA,UACA,UACA,cACA,cACA,UACA,gBACA,sBACA,SACA,UACA,UACA,aACA,WACA,MACA,WACA,MACA,WACA,OACA,OACA,UACA,aACA,QACA,WACA,QACA,OACA,QACA,OACA,UACA,QACA,MACA,SACA,OACA,QACA,UACA,WACA,QACA,YACA,OACA,SACA,SACA,QACA,QACA,OACA,QACA,SAGWwD,GAAMxD,GAAO,CACxB,gBACA,aACA,WACA,qBACA,YACA,SACA,gBACA,gBACA,UACA,gBACA,iBACA,QACA,OACA,KACA,QACA,OACA,gBACA,YACA,YACA,QACA,sBACA,8BACA,gBACA,kBACA,KACA,KACA,IACA,KACA,KACA,kBACA,YACA,UACA,UACA,MACA,WACA,YACA,MACA,WACA,OACA,eACA,YACA,SACA,cACA,cACA,gBACA,cACA,YACA,mBACA,eACA,aACA,eACA,cACA,KACA,KACA,KACA,KACA,aACA,WACA,gBACA,oBACA,SACA,OACA,KACA,kBACA,KACA,MACA,YACA,IACA,KACA,KACA,KACA,KACA,UACA,YACA,aACA,WACA,OACA,eACA,iBACA,eACA,mBACA,iBACA,QACA,aACA,aACA,eACA,eACA,cACA,cACA,mBACA,YACA,MACA,OACA,QACA,SACA,OACA,MACA,OACA,aACA,SACA,WACA,UACA,QACA,SACA,cACA,SACA,WACA,cACA,OACA,aACA,sBACA,mBACA,eACA,SACA,gBACA,sBACA,iBACA,IACA,KACA,KACA,SACA,OACA,OACA,cACA,YACA,UACA,SACA,SACA,QACA,OACA,kBACA,QACA,mBACA,mBACA,eACA,cACA,eACA,cACA,aACA,eACA,mBACA,oBACA,iBACA,kBACA,oBACA,iBACA,SACA,eACA,QACA,eACA,iBACA,WACA,cACA,UACA,UACA,YACA,mBACA,cACA,kBACA,iBACA,aACA,OACA,KACA,KACA,UACA,SACA,UACA,aACA,UACA,aACA,gBACA,gBACA,QACA,eACA,OACA,eACA,mBACA,mBACA,IACA,KACA,KACA,QACA,IACA,KACA,KACA,IACA,eAGWyD,GAASzD,GAAO,CAC3B,SACA,cACA,QACA,WACA,QACA,eACA,cACA,aACA,aACA,QACA,MACA,UACA,eACA,WACA,QACA,QACA,SACA,OACA,KACA,UACA,SACA,gBACA,SACA,SACA,iBACA,YACA,WACA,cACA,UACA,UACA,gBACA,WACA,WACA,OACA,WACA,WACA,aACA,UACA,SACA,SACA,cACA,gBACA,uBACA,YACA,YACA,aACA,WACA,iBACA,iBACA,YACA,UACA,QACA,UAGW0D,GAAM1D,GAAO,CACxB,aACA,SACA,cACA,YACA,gBC9WW2D,GAAgB1D,GAAK,6BACrB2D,GAAW3D,GAAK,yBAChB4D,GAAc5D,GAAK,iBACnB6D,GAAY7D,GAAK,gCACjB8D,GAAY9D,GAAK,kBACjB+D,GA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","sources":["webpack://wenshu-mcp-frontend/./src/views/chat/ChatView.vue","webpack://wenshu-mcp-frontend/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://wenshu-mcp-frontend/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://wenshu-mcp-frontend/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://wenshu-mcp-frontend/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://wenshu-mcp-frontend/../src/defaults.ts","webpack://wenshu-mcp-frontend/../src/rules.ts","webpack://wenshu-mcp-frontend/../src/helpers.ts","webpack://wenshu-mcp-frontend/../src/Tokenizer.ts","webpack://wenshu-mcp-frontend/../src/Lexer.ts","webpack://wenshu-mcp-frontend/../src/Renderer.ts","webpack://wenshu-mcp-frontend/../src/TextRenderer.ts","webpack://wenshu-mcp-frontend/../src/Parser.ts","webpack://wenshu-mcp-frontend/../src/Hooks.ts","webpack://wenshu-mcp-frontend/../src/Instance.ts","webpack://wenshu-mcp-frontend/../src/marked.ts","webpack://wenshu-mcp-frontend/../src/utils.ts","webpack://wenshu-mcp-frontend/../src/tags.ts","webpack://wenshu-mcp-frontend/../src/attrs.ts","webpack://wenshu-mcp-frontend/../src/regexp.ts","webpack://wenshu-mcp-frontend/../src/purify.ts","webpack://wenshu-mcp-frontend/./node_modules/uuid/dist/esm-browser/rng.js","webpack://wenshu-mcp-frontend/./node_modules/uuid/dist/esm-browser/regex.js","webpack://wenshu-mcp-frontend/./node_modules/uuid/dist/esm-browser/validate.js","webpack://wenshu-mcp-frontend/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://wenshu-mcp-frontend/./node_modules/uuid/dist/esm-browser/v4.js","webpack://wenshu-mcp-frontend/./src/views/chat/ChatView.vue?5fff"],"sourcesContent":["<template>\n  <div class=\"chat-container\">\n    <!-- 左侧会话列表 -->\n    <div class=\"session-list-panel\">\n      <div class=\"panel-header\">\n        <h3>会话列表</h3>\n        <el-button type=\"primary\" size=\"small\" @click=\"createNewSession\">\n          <el-icon><icon-plus /></el-icon>\n          <span>新建会话</span>\n        </el-button>\n      </div>\n      \n      <div class=\"search-box\">\n        <el-input \n          v-model=\"searchKeyword\" \n          placeholder=\"搜索会话\" \n          clearable \n        >\n          <template #prefix>\n            <el-icon><icon-search /></el-icon>\n          </template>\n        </el-input>\n      </div>\n      \n      <div class=\"session-list\">\n        <div \n          v-for=\"session in filteredSessions\" \n          :key=\"session.id\" \n          class=\"session-item\"\n          :class=\"{ active: session.id === currentSession.id }\"\n          @click=\"switchSession(session)\"\n        >\n          <div class=\"session-icon\">\n            <el-icon><icon-chat-dot-round /></el-icon>\n          </div>\n          <div class=\"session-info\">\n            <div class=\"session-title\">{{ session.title }}</div>\n            <div class=\"session-meta\">\n              <span class=\"session-time\">{{ formatDate(session.updatedAt) }}</span>\n              <span class=\"session-count\">{{ session.messageCount }}条</span>\n            </div>\n          </div>\n          <div class=\"session-actions\">\n            <el-dropdown trigger=\"click\" @command=\"handleSessionAction($event, session)\">\n              <el-icon><icon-more /></el-icon>\n              <template #dropdown>\n                <el-dropdown-menu>\n                  <el-dropdown-item command=\"rename\">重命名</el-dropdown-item>\n                  <el-dropdown-item command=\"export\">导出</el-dropdown-item>\n                  <el-dropdown-item command=\"delete\" divided>删除</el-dropdown-item>\n                </el-dropdown-menu>\n              </template>\n            </el-dropdown>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- 右侧聊天区域 -->\n    <div class=\"chat-panel\">\n      <!-- 头部工具栏 -->\n      <div class=\"chat-header\">\n        <div class=\"session-title\">{{ currentSession.title }}</div>\n        <div class=\"toolbar\">\n          <el-tooltip content=\"配置数据源\">\n            <el-button circle @click=\"showDataSourcePanel = true\">\n              <el-icon><icon-data-line /></el-icon>\n            </el-button>\n          </el-tooltip>\n          <el-tooltip content=\"选择模型\">\n            <el-button circle @click=\"showModelPanel = true\">\n              <el-icon><icon-monitor /></el-icon>\n            </el-button>\n          </el-tooltip>\n          <el-tooltip content=\"清空会话\">\n            <el-button circle @click=\"clearMessages\">\n              <el-icon><icon-delete /></el-icon>\n            </el-button>\n          </el-tooltip>\n        </div>\n      </div>\n      \n      <!-- 消息区域 -->\n      <div class=\"message-container\" ref=\"messageContainer\">\n        <template v-if=\"currentSession.messages.length === 0\">\n          <div class=\"empty-state\">\n            <div class=\"empty-icon\">\n              <el-icon><icon-chat-square /></el-icon>\n            </div>\n            <div class=\"empty-text\">暂无消息，开始新的对话吧</div>\n          </div>\n        </template>\n        \n        <template v-else>\n          <div \n            v-for=\"(message, index) in currentSession.messages\" \n            :key=\"index\"\n            class=\"message-wrapper\"\n            :class=\"{'user-message': message.role === 'user', 'ai-message': message.role === 'assistant'}\"\n          >\n            <div class=\"message-avatar\">\n              <el-avatar>\n                <el-icon>\n                  <icon-user v-if=\"message.role === 'user'\" />\n                  <icon-cpu v-else />\n                </el-icon>\n              </el-avatar>\n            </div>\n            <div class=\"message-content\">\n              <div class=\"message-header\">\n                <span class=\"message-sender\">{{ message.role === 'user' ? '用户' : '智能体' }}</span>\n                <span class=\"message-time\">{{ formatTime(message.timestamp) }}</span>\n              </div>\n              <div class=\"message-body\" v-html=\"formatMessage(message.content)\"></div>\n              <div class=\"message-actions\" v-if=\"message.role === 'assistant'\">\n                <el-button text type=\"primary\" size=\"small\" @click=\"copyMessage(message)\">\n                  <el-icon><icon-document-copy /></el-icon>\n                  <span>复制</span>\n                </el-button>\n                <el-button text type=\"primary\" size=\"small\" @click=\"rateMessage(message, 'like')\">\n                  <el-icon><icon-thumb-up /></el-icon>\n                  <span>有用</span>\n                </el-button>\n                <el-button text type=\"danger\" size=\"small\" @click=\"rateMessage(message, 'dislike')\">\n                  <el-icon><icon-thumb-down /></el-icon>\n                  <span>无用</span>\n                </el-button>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"typing-indicator\" v-if=\"isTyping\">\n            <span class=\"dot\"></span>\n            <span class=\"dot\"></span>\n            <span class=\"dot\"></span>\n          </div>\n        </template>\n      </div>\n      \n      <!-- 输入区域 -->\n      <div class=\"input-container\">\n        <div class=\"toolbar\">\n          <el-tooltip content=\"上传文件\">\n            <el-button circle @click=\"uploadFile\">\n              <el-icon><icon-upload /></el-icon>\n            </el-button>\n          </el-tooltip>\n          <el-tooltip content=\"语音输入\">\n            <el-button circle @click=\"toggleVoiceInput\">\n              <el-icon><icon-microphone /></el-icon>\n            </el-button>\n          </el-tooltip>\n        </div>\n        \n        <div class=\"input-area\">\n          <el-input\n            v-model=\"messageInput\"\n            type=\"textarea\"\n            :rows=\"4\"\n            placeholder=\"输入您的问题...\"\n            resize=\"none\"\n            @keydown.enter.ctrl.prevent=\"sendMessage\"\n          />\n          \n          <el-button \n            type=\"primary\" \n            :disabled=\"!messageInput.trim()\" \n            @click=\"sendMessage\"\n          >\n            发送\n            <el-icon><icon-position /></el-icon>\n          </el-button>\n        </div>\n        \n        <div class=\"input-tips\">\n          按 Ctrl + Enter 发送消息\n        </div>\n      </div>\n    </div>\n    \n    <!-- 数据源配置抽屉 -->\n    <el-drawer\n      v-model=\"showDataSourcePanel\"\n      title=\"选择数据源\"\n      direction=\"rtl\"\n      size=\"30%\"\n    >\n      <div class=\"datasource-selector\">\n        <el-checkbox-group v-model=\"selectedDataSources\">\n          <div v-for=\"source in availableDataSources\" :key=\"source.id\" class=\"datasource-item\">\n            <el-checkbox :value=\"source.id\">\n              <div class=\"datasource-info\">\n                <div class=\"datasource-name\">{{ source.name }}</div>\n                <div class=\"datasource-type\">{{ source.type }}</div>\n              </div>\n            </el-checkbox>\n          </div>\n        </el-checkbox-group>\n      </div>\n      \n      <template #footer>\n        <div class=\"drawer-footer\">\n          <el-button @click=\"showDataSourcePanel = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"confirmDataSources\">确认</el-button>\n        </div>\n      </template>\n    </el-drawer>\n    \n    <!-- 模型配置抽屉 -->\n    <el-drawer\n      v-model=\"showModelPanel\"\n      title=\"选择模型\"\n      direction=\"rtl\"\n      size=\"30%\"\n    >\n      <div class=\"model-selector\">\n        <el-radio-group v-model=\"selectedModel\">\n          <div v-for=\"model in availableModels\" :key=\"model.id\" class=\"model-item\">\n            <el-radio :value=\"model.id\">\n              <div class=\"model-info\">\n                <div class=\"model-name\">{{ model.name }}</div>\n                <div class=\"model-type\">{{ model.type }}</div>\n              </div>\n            </el-radio>\n          </div>\n        </el-radio-group>\n      </div>\n      \n      <template #footer>\n        <div class=\"drawer-footer\">\n          <el-button @click=\"showModelPanel = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"confirmModel\">确认</el-button>\n        </div>\n      </template>\n    </el-drawer>\n    \n    <!-- 重命名会话对话框 -->\n    <el-dialog v-model=\"renameDialogVisible\" title=\"重命名会话\" width=\"30%\">\n      <el-input v-model=\"newSessionTitle\" placeholder=\"请输入新的会话名称\"></el-input>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"renameDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"confirmRename\">确认</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed, onMounted, nextTick, watch } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport * as marked from 'marked'\nimport DOMPurify from 'dompurify'\nimport { v4 as uuidv4 } from 'uuid'\n// 导入需要的Element Plus图标组件\nimport { \n  Plus, Search, ChatDotRound, More, DataLine, Monitor, Delete, \n  ChatSquare, User, Cpu, DocumentCopy, ThumbUp, ThumbDown, \n  Upload, Microphone, Position \n} from '@element-plus/icons-vue'\n\nexport default {\n  name: 'ChatView',\n  \n  // 注册图标组件\n  components: {\n    'icon-plus': Plus,\n    'icon-search': Search,\n    'icon-chat-dot-round': ChatDotRound,\n    'icon-more': More,\n    'icon-data-line': DataLine,\n    'icon-monitor': Monitor,\n    'icon-delete': Delete,\n    'icon-chat-square': ChatSquare,\n    'icon-user': User,\n    'icon-cpu': Cpu,\n    'icon-document-copy': DocumentCopy,\n    'icon-thumb-up': ThumbUp,\n    'icon-thumb-down': ThumbDown,\n    'icon-upload': Upload,\n    'icon-microphone': Microphone,\n    'icon-position': Position\n  },\n  \n  setup() {\n    // 路由实例\n    const router = useRouter()\n    \n    // 会话列表搜索\n    const searchKeyword = ref('')\n    \n    // 会话重命名相关\n    const renameDialogVisible = ref(false)\n    const newSessionTitle = ref('')\n    const sessionToRename = ref(null)\n    \n    // 消息输入\n    const messageInput = ref('')\n    const isTyping = ref(false)\n    const messageContainer = ref(null)\n    \n    // 数据源配置\n    const showDataSourcePanel = ref(false)\n    const availableDataSources = ref([\n      { id: 1, name: '生产环境MySQL', type: 'MySQL' },\n      { id: 2, name: '测试环境PostgreSQL', type: 'PostgreSQL' },\n      { id: 3, name: '开发环境SQL Server', type: 'SQLServer' },\n      { id: 4, name: '历史数据Oracle', type: 'Oracle' }\n    ])\n    const selectedDataSources = ref([1]) // 默认选择第一个数据源\n    \n    // 模型配置\n    const showModelPanel = ref(false)\n    const availableModels = ref([\n      { id: 1, name: 'GPT-4', type: '通用模型' },\n      { id: 2, name: 'Claude 3', type: '通用模型' },\n      { id: 3, name: 'LLaMA 3', type: '开源模型' },\n      { id: 4, name: 'FinBERT', type: '金融专用模型' }\n    ])\n    const selectedModel = ref(1) // 默认选择第一个模型\n    \n    // 会话列表和当前会话\n    const sessions = ref([\n      {\n        id: 1,\n        title: '新建会话',\n        createdAt: '2023-11-10T08:30:00Z',\n        updatedAt: '2023-11-10T08:45:00Z',\n        messageCount: 5,\n        messages: [\n          {\n            id: 101,\n            role: 'user',\n            content: '你好，请查询一下我们的销售数据',\n            timestamp: '2023-11-10T08:30:00Z'\n          },\n          {\n            id: 102,\n            role: 'assistant',\n            content: '您好！我可以帮您查询销售数据。请问您需要查询哪个时间段、哪个地区或产品的销售数据呢？',\n            timestamp: '2023-11-10T08:30:10Z'\n          },\n          {\n            id: 103,\n            role: 'user',\n            content: '查询2023年10月的销售额',\n            timestamp: '2023-11-10T08:31:00Z'\n          },\n          {\n            id: 104,\n            role: 'assistant',\n            content: '我已查询到2023年10月的销售数据：\\n\\n总销售额：¥1,258,750\\n同比增长：14.5%\\n\\n各产品线销售情况：\\n- 数据服务：¥528,300 (42%)\\n- 云存储：¥356,200 (28%)\\n- 安全产品：¥245,600 (19%)\\n- 其他服务：¥128,650 (11%)\\n\\n需要我为您提供更详细的分析吗？',\n            timestamp: '2023-11-10T08:31:15Z'\n          },\n          {\n            id: 105,\n            role: 'user',\n            content: '帮我分析一下销售趋势',\n            timestamp: '2023-11-10T08:44:00Z'\n          }\n        ],\n        dataSourceIds: [1],\n        modelId: 1\n      },\n      {\n        id: 2,\n        title: '数据库查询示例',\n        createdAt: '2023-11-09T10:15:00Z',\n        updatedAt: '2023-11-09T10:30:00Z',\n        messageCount: 3,\n        messages: [],\n        dataSourceIds: [1, 2],\n        modelId: 1\n      },\n      {\n        id: 3,\n        title: '财务数据分析',\n        createdAt: '2023-11-08T14:20:00Z',\n        updatedAt: '2023-11-08T15:45:00Z',\n        messageCount: 8,\n        messages: [],\n        dataSourceIds: [4],\n        modelId: 4\n      }\n    ])\n    \n    // 当前会话\n    const currentSession = ref({...sessions.value[0]})\n    \n    // 过滤会话列表\n    const filteredSessions = computed(() => {\n      if (!searchKeyword.value) return sessions.value\n      \n      const keyword = searchKeyword.value.toLowerCase()\n      return sessions.value.filter(session => \n        session.title.toLowerCase().includes(keyword)\n      )\n    })\n    \n    // 创建新会话\n    const createNewSession = () => {\n      const newSession = {\n        id: uuidv4(),\n        title: `新建会话 ${sessions.value.length + 1}`,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n        messageCount: 0,\n        messages: [],\n        dataSourceIds: [selectedDataSources.value[0]],\n        modelId: selectedModel.value\n      }\n      \n      sessions.value.unshift(newSession)\n      currentSession.value = {...newSession}\n      \n      // 清空输入框\n      messageInput.value = ''\n    }\n    \n    // 切换会话\n    const switchSession = (session) => {\n      // 如果点击的是当前会话，不做任何操作\n      if (session.id === currentSession.value.id) return\n      \n      // 更新选中的数据源和模型\n      selectedDataSources.value = session.dataSourceIds || [1]\n      selectedModel.value = session.modelId || 1\n      \n      // 切换会话\n      currentSession.value = {...session}\n      \n      // 如果会话消息为空，加载消息\n      if (!session.messages || session.messages.length === 0) {\n        // 模拟加载消息\n        loadSessionMessages(session.id)\n      }\n      \n      // 滚动到最新消息\n      nextTick(() => {\n        scrollToBottom()\n      })\n    }\n    \n    // 加载会话消息\n    const loadSessionMessages = (sessionId) => {\n      // 实际项目中应该从API获取消息\n      // 这里使用模拟数据\n      const sessionIndex = sessions.value.findIndex(s => s.id === sessionId)\n      if (sessionIndex === -1) return\n      \n      // 模拟加载延迟\n      setTimeout(() => {\n        if (sessionId === 2) {\n          // 数据库查询示例的模拟消息\n          sessions.value[sessionIndex].messages = [\n            {\n              id: 201,\n              role: 'user',\n              content: '查询用户表的结构',\n              timestamp: '2023-11-09T10:15:00Z'\n            },\n            {\n              id: 202,\n              role: 'assistant',\n              content: '用户表(users)的结构如下：\\n\\n| 字段名 | 类型 | 说明 |\\n| --- | --- | --- |\\n| id | INT | 主键，自增 |\\n| username | VARCHAR(50) | 用户名 |\\n| email | VARCHAR(100) | 邮箱地址 |\\n| password_hash | VARCHAR(128) | 密码哈希值 |\\n| created_at | TIMESTAMP | 创建时间 |\\n| status | TINYINT | 状态：1-活跃，0-禁用 |',\n              timestamp: '2023-11-09T10:15:10Z'\n            },\n            {\n              id: 203,\n              role: 'user',\n              content: '统计各状态的用户数量',\n              timestamp: '2023-11-09T10:20:00Z'\n            }\n          ]\n          currentSession.value = {...sessions.value[sessionIndex]}\n        } else if (sessionId === 3) {\n          // 财务数据分析的模拟消息\n          sessions.value[sessionIndex].messages = [\n            {\n              id: 301,\n              role: 'user',\n              content: '分析2023年第三季度的财务状况',\n              timestamp: '2023-11-08T14:20:00Z'\n            },\n            {\n              id: 302,\n              role: 'assistant',\n              content: '2023年第三季度财务分析：\\n\\n**收入**：¥8,750,000\\n**支出**：¥6,120,000\\n**利润**：¥2,630,000\\n**利润率**：30.1%\\n\\n与去年同期相比：\\n- 收入增长：18.5%\\n- 支出增长：12.3%\\n- 利润增长：35.8%\\n- 利润率提升：3.9个百分点\\n\\n主要收入来源：\\n1. 产品销售：65%\\n2. 服务订阅：25%\\n3. 咨询服务：10%',\n              timestamp: '2023-11-08T14:20:30Z'\n            },\n            {\n              id: 303,\n              role: 'user',\n              content: '请生成一个可视化图表展示这些数据',\n              timestamp: '2023-11-08T14:45:00Z'\n            }\n          ]\n          currentSession.value = {...sessions.value[sessionIndex]}\n        }\n      }, 500)\n    }\n    \n    // 发送消息\n    const sendMessage = async () => {\n      if (!messageInput.value.trim()) return\n      \n      const userMessage = {\n        id: uuidv4(),\n        role: 'user',\n        content: messageInput.value,\n        timestamp: new Date().toISOString()\n      }\n      \n      // 添加用户消息\n      currentSession.value.messages.push(userMessage)\n      \n      // 更新会话信息\n      const sessionIndex = sessions.value.findIndex(s => s.id === currentSession.value.id)\n      if (sessionIndex !== -1) {\n        sessions.value[sessionIndex].messages = [...currentSession.value.messages]\n        sessions.value[sessionIndex].messageCount = currentSession.value.messages.length\n        sessions.value[sessionIndex].updatedAt = new Date().toISOString()\n      }\n      \n      // 清空输入框\n      messageInput.value = ''\n      \n      // 滚动到底部\n      nextTick(() => {\n        scrollToBottom()\n      })\n      \n      // 显示输入中状态\n      isTyping.value = true\n      \n      try {\n        // 模拟AI回复延迟\n        await new Promise(resolve => setTimeout(resolve, 1500))\n        \n        // 生成AI回复\n        const aiMessage = {\n          id: uuidv4(),\n          role: 'assistant',\n          content: await generateAIResponse(userMessage.content),\n          timestamp: new Date().toISOString()\n        }\n        \n        // 添加AI回复\n        currentSession.value.messages.push(aiMessage)\n        \n        // 更新会话信息\n        if (sessionIndex !== -1) {\n          sessions.value[sessionIndex].messages = [...currentSession.value.messages]\n          sessions.value[sessionIndex].messageCount = currentSession.value.messages.length\n          sessions.value[sessionIndex].updatedAt = new Date().toISOString()\n        }\n        \n        // 隐藏输入中状态\n        isTyping.value = false\n        \n        // 滚动到底部\n        nextTick(() => {\n          scrollToBottom()\n        })\n      } catch (error) {\n        console.error('获取AI回复失败', error)\n        isTyping.value = false\n        \n        // 显示错误消息\n        ElMessage.error('获取回复失败，请重试')\n      }\n    }\n    \n    // 模拟AI回复生成\n    const generateAIResponse = async (userInput) => {\n      // 实际项目中应该调用API获取AI回复\n      // 这里使用模拟数据\n      \n      const input = userInput.toLowerCase()\n      \n      if (input.includes('数据库') || input.includes('表') || input.includes('查询')) {\n        return '根据您的数据库查询，我找到了以下信息：\\n\\n```sql\\nSELECT * FROM users WHERE status = 1;\\n```\\n\\n查询结果显示有1,205个活跃用户，占总用户数的87.3%。非活跃用户有175个，占比12.7%。\\n\\n需要了解更详细的用户数据吗？'\n      }\n      \n      if (input.includes('销售') || input.includes('营收') || input.includes('业绩')) {\n        return '2023年的销售数据分析如下：\\n\\n- 第一季度：¥3,456,000，同比增长15.2%\\n- 第二季度：¥4,127,000，同比增长18.7%\\n- 第三季度：¥4,890,000，同比增长21.3%\\n- 第四季度：预计¥5,200,000，预计同比增长23.5%\\n\\n主要增长点来自于云服务和数据分析产品线。您需要查看更详细的产品线分析吗？'\n      }\n      \n      if (input.includes('图表') || input.includes('可视化') || input.includes('展示')) {\n        return '以下是基于您请求的数据可视化结果：\\n\\n```chart\\n{\\n  \"type\": \"bar\",\\n  \"data\": {\\n    \"labels\": [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\\n    \"datasets\": [{\\n      \"label\": \"2023年季度销售额(万元)\",\\n      \"data\": [345.6, 412.7, 489.0, 520.0]\\n    }]\\n  }\\n}\\n```\\n\\n您还需要其他类型的图表吗？例如饼图、折线图等。'\n      }\n      \n      return '我理解您的问题是关于\"' + userInput + '\"。请问您需要查询哪些具体信息？您可以：\\n\\n1. 查询特定数据库表的结构和内容\\n2. 分析业务数据和趋势\\n3. 生成数据报表和可视化\\n\\n请告诉我您需要深入了解哪个方面的信息。'\n    }\n    \n    // 复制消息内容\n    const copyMessage = (message) => {\n      navigator.clipboard.writeText(message.content)\n        .then(() => {\n          ElMessage({\n            message: '已复制到剪贴板',\n            type: 'success'\n          })\n        })\n        .catch(() => {\n          ElMessage.error('复制失败')\n        })\n    }\n    \n    // 评价消息\n    const rateMessage = (message, rating) => {\n      // 实际项目中应该调用API记录评价\n      ElMessage({\n        message: rating === 'like' ? '感谢您的肯定！' : '感谢您的反馈，我们会继续改进',\n        type: rating === 'like' ? 'success' : 'warning'\n      })\n    }\n    \n    // 清空会话消息\n    const clearMessages = () => {\n      ElMessageBox.confirm(\n        '确定要清空当前会话的所有消息吗？此操作不可撤销',\n        '警告',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      )\n        .then(() => {\n          // 清空当前会话消息\n          currentSession.value.messages = []\n          \n          // 更新会话列表\n          const sessionIndex = sessions.value.findIndex(s => s.id === currentSession.value.id)\n          if (sessionIndex !== -1) {\n            sessions.value[sessionIndex].messages = []\n            sessions.value[sessionIndex].messageCount = 0\n            sessions.value[sessionIndex].updatedAt = new Date().toISOString()\n          }\n          \n          ElMessage({\n            type: 'success',\n            message: '会话已清空'\n          })\n        })\n        .catch(() => {\n          // 取消操作\n        })\n    }\n    \n    // 会话操作处理\n    const handleSessionAction = (command, session) => {\n      switch (command) {\n        case 'rename':\n          sessionToRename.value = session\n          newSessionTitle.value = session.title\n          renameDialogVisible.value = true\n          break\n        case 'export':\n          exportSession(session)\n          break\n        case 'delete':\n          deleteSession(session)\n          break\n      }\n    }\n    \n    // 确认重命名会话\n    const confirmRename = () => {\n      if (!newSessionTitle.value.trim()) {\n        ElMessage.warning('会话名称不能为空')\n        return\n      }\n      \n      const sessionIndex = sessions.value.findIndex(s => s.id === sessionToRename.value.id)\n      if (sessionIndex !== -1) {\n        sessions.value[sessionIndex].title = newSessionTitle.value\n        \n        // 如果重命名的是当前会话，也更新当前会话\n        if (currentSession.value.id === sessionToRename.value.id) {\n          currentSession.value.title = newSessionTitle.value\n        }\n        \n        ElMessage({\n          message: '重命名成功',\n          type: 'success'\n        })\n      }\n      \n      renameDialogVisible.value = false\n    }\n    \n    // 导出会话\n    const exportSession = (session) => {\n      // 构建导出数据\n      const exportData = {\n        title: session.title,\n        createdAt: session.createdAt,\n        updatedAt: session.updatedAt,\n        messages: session.messages\n      }\n      \n      // 转换为JSON字符串\n      const dataStr = JSON.stringify(exportData, null, 2)\n      \n      // 创建下载链接\n      const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr)\n      const exportFileName = `chat-${session.title}-${new Date().toISOString().split('T')[0]}.json`\n      \n      // 创建下载链接并点击\n      const linkElement = document.createElement('a')\n      linkElement.setAttribute('href', dataUri)\n      linkElement.setAttribute('download', exportFileName)\n      linkElement.click()\n      \n      ElMessage({\n        message: '导出成功',\n        type: 'success'\n      })\n    }\n    \n    // 删除会话\n    const deleteSession = (session) => {\n      ElMessageBox.confirm(\n        `确定要删除会话\"${session.title}\"吗？此操作不可撤销`,\n        '警告',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      )\n        .then(() => {\n          // 从会话列表中删除\n          sessions.value = sessions.value.filter(s => s.id !== session.id)\n          \n          // 如果删除的是当前会话，切换到第一个会话\n          if (currentSession.value.id === session.id) {\n            if (sessions.value.length > 0) {\n              currentSession.value = {...sessions.value[0]}\n            } else {\n              // 如果没有会话了，创建一个新会话\n              createNewSession()\n            }\n          }\n          \n          ElMessage({\n            type: 'success',\n            message: '删除成功'\n          })\n        })\n        .catch(() => {\n          // 取消操作\n        })\n    }\n    \n    // 确认数据源选择\n    const confirmDataSources = () => {\n      // 更新当前会话的数据源\n      currentSession.value.dataSourceIds = [...selectedDataSources.value]\n      \n      // 更新会话列表\n      const sessionIndex = sessions.value.findIndex(s => s.id === currentSession.value.id)\n      if (sessionIndex !== -1) {\n        sessions.value[sessionIndex].dataSourceIds = [...selectedDataSources.value]\n      }\n      \n      showDataSourcePanel.value = false\n      \n      ElMessage({\n        message: '数据源配置已更新',\n        type: 'success'\n      })\n    }\n    \n    // 确认模型选择\n    const confirmModel = () => {\n      // 更新当前会话的模型\n      currentSession.value.modelId = selectedModel.value\n      \n      // 更新会话列表\n      const sessionIndex = sessions.value.findIndex(s => s.id === currentSession.value.id)\n      if (sessionIndex !== -1) {\n        sessions.value[sessionIndex].modelId = selectedModel.value\n      }\n      \n      showModelPanel.value = false\n      \n      ElMessage({\n        message: '模型配置已更新',\n        type: 'success'\n      })\n    }\n    \n    // 上传文件\n    const uploadFile = () => {\n      // 实际项目中应该实现文件上传功能\n      ElMessage({\n        message: '文件上传功能正在开发中',\n        type: 'info'\n      })\n    }\n    \n    // 语音输入\n    const toggleVoiceInput = () => {\n      // 实际项目中应该实现语音输入功能\n      ElMessage({\n        message: '语音输入功能正在开发中',\n        type: 'info'\n      })\n    }\n    \n    // 格式化日期\n    const formatDate = (dateString) => {\n      if (!dateString) return ''\n      \n      const date = new Date(dateString)\n      const now = new Date()\n      \n      // 如果是今天\n      if (date.toDateString() === now.toDateString()) {\n        return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n      }\n      \n      // 如果是昨天\n      const yesterday = new Date(now)\n      yesterday.setDate(now.getDate() - 1)\n      if (date.toDateString() === yesterday.toDateString()) {\n        return '昨天 ' + date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n      }\n      \n      // 如果是今年\n      if (date.getFullYear() === now.getFullYear()) {\n        return date.toLocaleDateString([], { month: '2-digit', day: '2-digit' })\n      }\n      \n      // 其他情况\n      return date.toLocaleDateString()\n    }\n    \n    // 格式化时间\n    const formatTime = (dateString) => {\n      if (!dateString) return ''\n      \n      const date = new Date(dateString)\n      return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n    }\n    \n    // 格式化消息内容，支持Markdown\n    const formatMessage = (content) => {\n      if (!content) return ''\n      \n      // 使用marked解析Markdown\n      const html = marked.parse(content)\n      \n      // 使用DOMPurify清理HTML，防止XSS攻击\n      return DOMPurify.sanitize(html)\n    }\n    \n    // 滚动到底部\n    const scrollToBottom = () => {\n      if (messageContainer.value) {\n        messageContainer.value.scrollTop = messageContainer.value.scrollHeight\n      }\n    }\n    \n    // 当消息列表变化时滚动到底部\n    watch(\n      () => currentSession.value.messages,\n      () => {\n        nextTick(() => {\n          scrollToBottom()\n        })\n      },\n      { deep: true }\n    )\n    \n    // 组件挂载时滚动到底部\n    onMounted(() => {\n      nextTick(() => {\n        scrollToBottom()\n      })\n    })\n    \n    return {\n      // 状态\n      searchKeyword,\n      messageInput,\n      isTyping,\n      renameDialogVisible,\n      newSessionTitle,\n      showDataSourcePanel,\n      showModelPanel,\n      messageContainer,\n      \n      // 数据\n      sessions,\n      filteredSessions,\n      currentSession,\n      availableDataSources,\n      selectedDataSources,\n      availableModels,\n      selectedModel,\n      \n      // 方法\n      createNewSession,\n      switchSession,\n      sendMessage,\n      copyMessage,\n      rateMessage,\n      clearMessages,\n      handleSessionAction,\n      confirmRename,\n      confirmDataSources,\n      confirmModel,\n      uploadFile,\n      toggleVoiceInput,\n      \n      // 工具函数\n      formatDate,\n      formatTime,\n      formatMessage,\n      scrollToBottom\n    }\n  }\n}\n</script> ","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","/**\n * Gets the original marked default options.\n */\nexport function _getDefaults() {\n    return {\n        async: false,\n        breaks: false,\n        extensions: null,\n        gfm: true,\n        hooks: null,\n        pedantic: false,\n        renderer: null,\n        silent: false,\n        tokenizer: null,\n        walkTokens: null,\n    };\n}\nexport let _defaults = _getDefaults();\nexport function changeDefaults(newDefaults) {\n    _defaults = newDefaults;\n}\n","const noopTest = { exec: () => null };\nfunction edit(regex, opt = '') {\n    let source = typeof regex === 'string' ? regex : regex.source;\n    const obj = {\n        replace: (name, val) => {\n            let valSource = typeof val === 'string' ? val : val.source;\n            valSource = valSource.replace(other.caret, '$1');\n            source = source.replace(name, valSource);\n            return obj;\n        },\n        getRegex: () => {\n            return new RegExp(source, opt);\n        },\n    };\n    return obj;\n}\nexport const other = {\n    codeRemoveIndent: /^(?: {1,4}| {0,3}\\t)/gm,\n    outputLinkReplace: /\\\\([\\[\\]])/g,\n    indentCodeCompensation: /^(\\s+)(?:```)/,\n    beginningSpace: /^\\s+/,\n    endingHash: /#$/,\n    startingSpaceChar: /^ /,\n    endingSpaceChar: / $/,\n    nonSpaceChar: /[^ ]/,\n    newLineCharGlobal: /\\n/g,\n    tabCharGlobal: /\\t/g,\n    multipleSpaceGlobal: /\\s+/g,\n    blankLine: /^[ \\t]*$/,\n    doubleBlankLine: /\\n[ \\t]*\\n[ \\t]*$/,\n    blockquoteStart: /^ {0,3}>/,\n    blockquoteSetextReplace: /\\n {0,3}((?:=+|-+) *)(?=\\n|$)/g,\n    blockquoteSetextReplace2: /^ {0,3}>[ \\t]?/gm,\n    listReplaceTabs: /^\\t+/,\n    listReplaceNesting: /^ {1,4}(?=( {4})*[^ ])/g,\n    listIsTask: /^\\[[ xX]\\] /,\n    listReplaceTask: /^\\[[ xX]\\] +/,\n    anyLine: /\\n.*\\n/,\n    hrefBrackets: /^<(.*)>$/,\n    tableDelimiter: /[:|]/,\n    tableAlignChars: /^\\||\\| *$/g,\n    tableRowBlankLine: /\\n[ \\t]*$/,\n    tableAlignRight: /^ *-+: *$/,\n    tableAlignCenter: /^ *:-+: *$/,\n    tableAlignLeft: /^ *:-+ *$/,\n    startATag: /^<a /i,\n    endATag: /^<\\/a>/i,\n    startPreScriptTag: /^<(pre|code|kbd|script)(\\s|>)/i,\n    endPreScriptTag: /^<\\/(pre|code|kbd|script)(\\s|>)/i,\n    startAngleBracket: /^</,\n    endAngleBracket: />$/,\n    pedanticHrefTitle: /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/,\n    unicodeAlphaNumeric: /[\\p{L}\\p{N}]/u,\n    escapeTest: /[&<>\"']/,\n    escapeReplace: /[&<>\"']/g,\n    escapeTestNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/,\n    escapeReplaceNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/g,\n    unescapeTest: /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig,\n    caret: /(^|[^\\[])\\^/g,\n    percentDecode: /%25/g,\n    findPipe: /\\|/g,\n    splitPipe: / \\|/,\n    slashPipe: /\\\\\\|/g,\n    carriageReturn: /\\r\\n|\\r/g,\n    spaceLine: /^ +$/gm,\n    notSpaceStart: /^\\S*/,\n    endingNewline: /\\n$/,\n    listItemRegex: (bull) => new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`),\n    nextBulletRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`),\n    hrRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`),\n    fencesBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`),\n    headingBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`),\n    htmlBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}<(?:[a-z].*>|!--)`, 'i'),\n};\n/**\n * Block-Level Grammar\n */\nconst newline = /^(?:[ \\t]*(?:\\n|$))+/;\nconst blockCode = /^((?: {4}| {0,3}\\t)[^\\n]+(?:\\n(?:[ \\t]*(?:\\n|$))*)?)+/;\nconst fences = /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/;\nconst hr = /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/;\nconst heading = /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/;\nconst bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nconst lheadingCore = /^(?!bull |blockCode|fences|blockquote|heading|html|table)((?:.|\\n(?!\\s*?\\n|bull |blockCode|fences|blockquote|heading|html|table))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/;\nconst lheading = edit(lheadingCore)\n    .replace(/bull/g, bullet) // lists can interrupt\n    .replace(/blockCode/g, /(?: {4}| {0,3}\\t)/) // indented code blocks can interrupt\n    .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n    .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n    .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n    .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n    .replace(/\\|table/g, '') // table not in commonmark\n    .getRegex();\nconst lheadingGfm = edit(lheadingCore)\n    .replace(/bull/g, bullet) // lists can interrupt\n    .replace(/blockCode/g, /(?: {4}| {0,3}\\t)/) // indented code blocks can interrupt\n    .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n    .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n    .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n    .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n    .replace(/table/g, / {0,3}\\|?(?:[:\\- ]*\\|)+[\\:\\- ]*\\n/) // table can interrupt\n    .getRegex();\nconst _paragraph = /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/;\nconst blockText = /^[^\\n]+/;\nconst _blockLabel = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nconst def = edit(/^ {0,3}\\[(label)\\]: *(?:\\n[ \\t]*)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n[ \\t]*)?| *\\n[ \\t]*)(title))? *(?:\\n+|$)/)\n    .replace('label', _blockLabel)\n    .replace('title', /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/)\n    .getRegex();\nconst list = edit(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/)\n    .replace(/bull/g, bullet)\n    .getRegex();\nconst _tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n    + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n    + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n    + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n    + '|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title'\n    + '|tr|track|ul';\nconst _comment = /<!--(?:-?>|[\\s\\S]*?(?:-->|$))/;\nconst html = edit('^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) closing tag\n    + ')', 'i')\n    .replace('comment', _comment)\n    .replace('tag', _tag)\n    .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst paragraph = edit(_paragraph)\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n    .replace('|table', '')\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockquote = edit(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/)\n    .replace('paragraph', paragraph)\n    .getRegex();\n/**\n * Normal Block Grammar\n */\nconst blockNormal = {\n    blockquote,\n    code: blockCode,\n    def,\n    fences,\n    heading,\n    hr,\n    html,\n    lheading,\n    list,\n    newline,\n    paragraph,\n    table: noopTest,\n    text: blockText,\n};\n/**\n * GFM Block Grammar\n */\nconst gfmTable = edit('^ *([^\\\\n ].*)\\\\n' // Header\n    + ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)') // Cells\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('blockquote', ' {0,3}>')\n    .replace('code', '(?: {4}| {0,3}\\t)[^\\\\n]')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockGfm = {\n    ...blockNormal,\n    lheading: lheadingGfm,\n    table: gfmTable,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n        .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n        .replace('table', gfmTable) // interrupt paragraphs with table\n        .replace('blockquote', ' {0,3}>')\n        .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n        .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n        .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n        .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n        .getRegex(),\n};\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\nconst blockPedantic = {\n    ...blockNormal,\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)'\n        + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n        + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n        .replace('comment', _comment)\n        .replace(/tag/g, '(?!(?:'\n        + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n        + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n        + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n        .getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest, // fences not supported\n    lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' *#{1,6} *[^\\n]')\n        .replace('lheading', lheading)\n        .replace('|table', '')\n        .replace('blockquote', ' {0,3}>')\n        .replace('|fences', '')\n        .replace('|list', '')\n        .replace('|html', '')\n        .replace('|tag', '')\n        .getRegex(),\n};\n/**\n * Inline-Level Grammar\n */\nconst escape = /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/;\nconst inlineCode = /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/;\nconst br = /^( {2,}|\\\\)\\n(?!\\s*$)/;\nconst inlineText = /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/;\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\nconst _punctuation = /[\\p{P}\\p{S}]/u;\nconst _punctuationOrSpace = /[\\s\\p{P}\\p{S}]/u;\nconst _notPunctuationOrSpace = /[^\\s\\p{P}\\p{S}]/u;\nconst punctuation = edit(/^((?![*_])punctSpace)/, 'u')\n    .replace(/punctSpace/g, _punctuationOrSpace).getRegex();\n// GFM allows ~ inside strong and em for strikethrough\nconst _punctuationGfmStrongEm = /(?!~)[\\p{P}\\p{S}]/u;\nconst _punctuationOrSpaceGfmStrongEm = /(?!~)[\\s\\p{P}\\p{S}]/u;\nconst _notPunctuationOrSpaceGfmStrongEm = /(?:[^\\s\\p{P}\\p{S}]|~)/u;\n// sequences em should skip over [title](link), `code`, <html>\nconst blockSkip = /\\[[^[\\]]*?\\]\\((?:\\\\.|[^\\\\\\(\\)]|\\((?:\\\\.|[^\\\\\\(\\)])*\\))*\\)|`[^`]*?`|<[^<>]*?>/g;\nconst emStrongLDelimCore = /^(?:\\*+(?:((?!\\*)punct)|[^\\s*]))|^_+(?:((?!_)punct)|([^\\s_]))/;\nconst emStrongLDelim = edit(emStrongLDelimCore, 'u')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst emStrongLDelimGfm = edit(emStrongLDelimCore, 'u')\n    .replace(/punct/g, _punctuationGfmStrongEm)\n    .getRegex();\nconst emStrongRDelimAstCore = '^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)' // Skip orphan inside strong\n    + '|[^*]+(?=[^*])' // Consume to delim\n    + '|(?!\\\\*)punct(\\\\*+)(?=[\\\\s]|$)' // (1) #*** can only be a Right Delimiter\n    + '|notPunctSpace(\\\\*+)(?!\\\\*)(?=punctSpace|$)' // (2) a***#, a*** can only be a Right Delimiter\n    + '|(?!\\\\*)punctSpace(\\\\*+)(?=notPunctSpace)' // (3) #***a, ***a can only be Left Delimiter\n    + '|[\\\\s](\\\\*+)(?!\\\\*)(?=punct)' // (4) ***# can only be Left Delimiter\n    + '|(?!\\\\*)punct(\\\\*+)(?!\\\\*)(?=punct)' // (5) #***# can be either Left or Right Delimiter\n    + '|notPunctSpace(\\\\*+)(?=notPunctSpace)'; // (6) a***a can be either Left or Right Delimiter\nconst emStrongRDelimAst = edit(emStrongRDelimAstCore, 'gu')\n    .replace(/notPunctSpace/g, _notPunctuationOrSpace)\n    .replace(/punctSpace/g, _punctuationOrSpace)\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst emStrongRDelimAstGfm = edit(emStrongRDelimAstCore, 'gu')\n    .replace(/notPunctSpace/g, _notPunctuationOrSpaceGfmStrongEm)\n    .replace(/punctSpace/g, _punctuationOrSpaceGfmStrongEm)\n    .replace(/punct/g, _punctuationGfmStrongEm)\n    .getRegex();\n// (6) Not allowed for _\nconst emStrongRDelimUnd = edit('^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)' // Skip orphan inside strong\n    + '|[^_]+(?=[^_])' // Consume to delim\n    + '|(?!_)punct(_+)(?=[\\\\s]|$)' // (1) #___ can only be a Right Delimiter\n    + '|notPunctSpace(_+)(?!_)(?=punctSpace|$)' // (2) a___#, a___ can only be a Right Delimiter\n    + '|(?!_)punctSpace(_+)(?=notPunctSpace)' // (3) #___a, ___a can only be Left Delimiter\n    + '|[\\\\s](_+)(?!_)(?=punct)' // (4) ___# can only be Left Delimiter\n    + '|(?!_)punct(_+)(?!_)(?=punct)', 'gu') // (5) #___# can be either Left or Right Delimiter\n    .replace(/notPunctSpace/g, _notPunctuationOrSpace)\n    .replace(/punctSpace/g, _punctuationOrSpace)\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst anyPunctuation = edit(/\\\\(punct)/, 'gu')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst autolink = edit(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/)\n    .replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/)\n    .replace('email', /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/)\n    .getRegex();\nconst _inlineComment = edit(_comment).replace('(?:-->|$)', '-->').getRegex();\nconst tag = edit('^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>') // CDATA section\n    .replace('comment', _inlineComment)\n    .replace('attribute', /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst _inlineLabel = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\nconst link = edit(/^!?\\[(label)\\]\\(\\s*(href)(?:(?:[ \\t]*(?:\\n[ \\t]*)?)(title))?\\s*\\)/)\n    .replace('label', _inlineLabel)\n    .replace('href', /<(?:\\\\.|[^\\n<>\\\\])+>|[^ \\t\\n\\x00-\\x1f]*/)\n    .replace('title', /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/)\n    .getRegex();\nconst reflink = edit(/^!?\\[(label)\\]\\[(ref)\\]/)\n    .replace('label', _inlineLabel)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst nolink = edit(/^!?\\[(ref)\\](?:\\[\\])?/)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst reflinkSearch = edit('reflink|nolink(?!\\\\()', 'g')\n    .replace('reflink', reflink)\n    .replace('nolink', nolink)\n    .getRegex();\n/**\n * Normal Inline Grammar\n */\nconst inlineNormal = {\n    _backpedal: noopTest, // only used for GFM url\n    anyPunctuation,\n    autolink,\n    blockSkip,\n    br,\n    code: inlineCode,\n    del: noopTest,\n    emStrongLDelim,\n    emStrongRDelimAst,\n    emStrongRDelimUnd,\n    escape,\n    link,\n    nolink,\n    punctuation,\n    reflink,\n    reflinkSearch,\n    tag,\n    text: inlineText,\n    url: noopTest,\n};\n/**\n * Pedantic Inline Grammar\n */\nconst inlinePedantic = {\n    ...inlineNormal,\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n};\n/**\n * GFM Inline Grammar\n */\nconst inlineGfm = {\n    ...inlineNormal,\n    emStrongRDelimAst: emStrongRDelimAstGfm,\n    emStrongLDelim: emStrongLDelimGfm,\n    url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/, 'i')\n        .replace('email', /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/)\n        .getRegex(),\n    _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])((?:\\\\.|[^\\\\])*?(?:\\\\.|[^\\s~\\\\]))\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/,\n};\n/**\n * GFM + Line Breaks Inline Grammar\n */\nconst inlineBreaks = {\n    ...inlineGfm,\n    br: edit(br).replace('{2,}', '*').getRegex(),\n    text: edit(inlineGfm.text)\n        .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n        .replace(/\\{2,\\}/g, '*')\n        .getRegex(),\n};\n/**\n * exports\n */\nexport const block = {\n    normal: blockNormal,\n    gfm: blockGfm,\n    pedantic: blockPedantic,\n};\nexport const inline = {\n    normal: inlineNormal,\n    gfm: inlineGfm,\n    breaks: inlineBreaks,\n    pedantic: inlinePedantic,\n};\n","import { other } from './rules.ts';\n/**\n * Helpers\n */\nconst escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nexport function escape(html, encode) {\n    if (encode) {\n        if (other.escapeTest.test(html)) {\n            return html.replace(other.escapeReplace, getEscapeReplacement);\n        }\n    }\n    else {\n        if (other.escapeTestNoEncode.test(html)) {\n            return html.replace(other.escapeReplaceNoEncode, getEscapeReplacement);\n        }\n    }\n    return html;\n}\nexport function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(other.unescapeTest, (_, n) => {\n        n = n.toLowerCase();\n        if (n === 'colon')\n            return ':';\n        if (n.charAt(0) === '#') {\n            return n.charAt(1) === 'x'\n                ? String.fromCharCode(parseInt(n.substring(2), 16))\n                : String.fromCharCode(+n.substring(1));\n        }\n        return '';\n    });\n}\nexport function cleanUrl(href) {\n    try {\n        href = encodeURI(href).replace(other.percentDecode, '%');\n    }\n    catch {\n        return null;\n    }\n    return href;\n}\nexport function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    const row = tableRow.replace(other.findPipe, (match, offset, str) => {\n        let escaped = false;\n        let curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\')\n            escaped = !escaped;\n        if (escaped) {\n            // odd number of slashes means | is escaped\n            // so we leave it alone\n            return '|';\n        }\n        else {\n            // add space before unescaped |\n            return ' |';\n        }\n    }), cells = row.split(other.splitPipe);\n    let i = 0;\n    // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n    if (!cells[0].trim()) {\n        cells.shift();\n    }\n    if (cells.length > 0 && !cells.at(-1)?.trim()) {\n        cells.pop();\n    }\n    if (count) {\n        if (cells.length > count) {\n            cells.splice(count);\n        }\n        else {\n            while (cells.length < count)\n                cells.push('');\n        }\n    }\n    for (; i < cells.length; i++) {\n        // leading or trailing whitespace is ignored per the gfm spec\n        cells[i] = cells[i].trim().replace(other.slashPipe, '|');\n    }\n    return cells;\n}\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nexport function rtrim(str, c, invert) {\n    const l = str.length;\n    if (l === 0) {\n        return '';\n    }\n    // Length of suffix matching the invert condition.\n    let suffLen = 0;\n    // Step left until we fail to match the invert condition.\n    while (suffLen < l) {\n        const currChar = str.charAt(l - suffLen - 1);\n        if (currChar === c && !invert) {\n            suffLen++;\n        }\n        else if (currChar !== c && invert) {\n            suffLen++;\n        }\n        else {\n            break;\n        }\n    }\n    return str.slice(0, l - suffLen);\n}\nexport function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n        return -1;\n    }\n    let level = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] === '\\\\') {\n            i++;\n        }\n        else if (str[i] === b[0]) {\n            level++;\n        }\n        else if (str[i] === b[1]) {\n            level--;\n            if (level < 0) {\n                return i;\n            }\n        }\n    }\n    if (level > 0) {\n        return -2;\n    }\n    return -1;\n}\n","import { _defaults } from './defaults.ts';\nimport { rtrim, splitCells, findClosingBracket, } from './helpers.ts';\nfunction outputLink(cap, link, raw, lexer, rules) {\n    const href = link.href;\n    const title = link.title || null;\n    const text = cap[1].replace(rules.other.outputLinkReplace, '$1');\n    if (cap[0].charAt(0) !== '!') {\n        lexer.state.inLink = true;\n        const token = {\n            type: 'link',\n            raw,\n            href,\n            title,\n            text,\n            tokens: lexer.inlineTokens(text),\n        };\n        lexer.state.inLink = false;\n        return token;\n    }\n    return {\n        type: 'image',\n        raw,\n        href,\n        title,\n        text,\n    };\n}\nfunction indentCodeCompensation(raw, text, rules) {\n    const matchIndentToCode = raw.match(rules.other.indentCodeCompensation);\n    if (matchIndentToCode === null) {\n        return text;\n    }\n    const indentToCode = matchIndentToCode[1];\n    return text\n        .split('\\n')\n        .map(node => {\n        const matchIndentInNode = node.match(rules.other.beginningSpace);\n        if (matchIndentInNode === null) {\n            return node;\n        }\n        const [indentInNode] = matchIndentInNode;\n        if (indentInNode.length >= indentToCode.length) {\n            return node.slice(indentToCode.length);\n        }\n        return node;\n    })\n        .join('\\n');\n}\n/**\n * Tokenizer\n */\nexport class _Tokenizer {\n    options;\n    rules; // set by the lexer\n    lexer; // set by the lexer\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(src) {\n        const cap = this.rules.block.newline.exec(src);\n        if (cap && cap[0].length > 0) {\n            return {\n                type: 'space',\n                raw: cap[0],\n            };\n        }\n    }\n    code(src) {\n        const cap = this.rules.block.code.exec(src);\n        if (cap) {\n            const text = cap[0].replace(this.rules.other.codeRemoveIndent, '');\n            return {\n                type: 'code',\n                raw: cap[0],\n                codeBlockStyle: 'indented',\n                text: !this.options.pedantic\n                    ? rtrim(text, '\\n')\n                    : text,\n            };\n        }\n    }\n    fences(src) {\n        const cap = this.rules.block.fences.exec(src);\n        if (cap) {\n            const raw = cap[0];\n            const text = indentCodeCompensation(raw, cap[3] || '', this.rules);\n            return {\n                type: 'code',\n                raw,\n                lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, '$1') : cap[2],\n                text,\n            };\n        }\n    }\n    heading(src) {\n        const cap = this.rules.block.heading.exec(src);\n        if (cap) {\n            let text = cap[2].trim();\n            // remove trailing #s\n            if (this.rules.other.endingHash.test(text)) {\n                const trimmed = rtrim(text, '#');\n                if (this.options.pedantic) {\n                    text = trimmed.trim();\n                }\n                else if (!trimmed || this.rules.other.endingSpaceChar.test(trimmed)) {\n                    // CommonMark requires space before trailing #s\n                    text = trimmed.trim();\n                }\n            }\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[1].length,\n                text,\n                tokens: this.lexer.inline(text),\n            };\n        }\n    }\n    hr(src) {\n        const cap = this.rules.block.hr.exec(src);\n        if (cap) {\n            return {\n                type: 'hr',\n                raw: rtrim(cap[0], '\\n'),\n            };\n        }\n    }\n    blockquote(src) {\n        const cap = this.rules.block.blockquote.exec(src);\n        if (cap) {\n            let lines = rtrim(cap[0], '\\n').split('\\n');\n            let raw = '';\n            let text = '';\n            const tokens = [];\n            while (lines.length > 0) {\n                let inBlockquote = false;\n                const currentLines = [];\n                let i;\n                for (i = 0; i < lines.length; i++) {\n                    // get lines up to a continuation\n                    if (this.rules.other.blockquoteStart.test(lines[i])) {\n                        currentLines.push(lines[i]);\n                        inBlockquote = true;\n                    }\n                    else if (!inBlockquote) {\n                        currentLines.push(lines[i]);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                lines = lines.slice(i);\n                const currentRaw = currentLines.join('\\n');\n                const currentText = currentRaw\n                    // precede setext continuation with 4 spaces so it isn't a setext\n                    .replace(this.rules.other.blockquoteSetextReplace, '\\n    $1')\n                    .replace(this.rules.other.blockquoteSetextReplace2, '');\n                raw = raw ? `${raw}\\n${currentRaw}` : currentRaw;\n                text = text ? `${text}\\n${currentText}` : currentText;\n                // parse blockquote lines as top level tokens\n                // merge paragraphs if this is a continuation\n                const top = this.lexer.state.top;\n                this.lexer.state.top = true;\n                this.lexer.blockTokens(currentText, tokens, true);\n                this.lexer.state.top = top;\n                // if there is no continuation then we are done\n                if (lines.length === 0) {\n                    break;\n                }\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'code') {\n                    // blockquote continuation cannot be preceded by a code block\n                    break;\n                }\n                else if (lastToken?.type === 'blockquote') {\n                    // include continuation in nested blockquote\n                    const oldToken = lastToken;\n                    const newText = oldToken.raw + '\\n' + lines.join('\\n');\n                    const newToken = this.blockquote(newText);\n                    tokens[tokens.length - 1] = newToken;\n                    raw = raw.substring(0, raw.length - oldToken.raw.length) + newToken.raw;\n                    text = text.substring(0, text.length - oldToken.text.length) + newToken.text;\n                    break;\n                }\n                else if (lastToken?.type === 'list') {\n                    // include continuation in nested list\n                    const oldToken = lastToken;\n                    const newText = oldToken.raw + '\\n' + lines.join('\\n');\n                    const newToken = this.list(newText);\n                    tokens[tokens.length - 1] = newToken;\n                    raw = raw.substring(0, raw.length - lastToken.raw.length) + newToken.raw;\n                    text = text.substring(0, text.length - oldToken.raw.length) + newToken.raw;\n                    lines = newText.substring(tokens.at(-1).raw.length).split('\\n');\n                    continue;\n                }\n            }\n            return {\n                type: 'blockquote',\n                raw,\n                tokens,\n                text,\n            };\n        }\n    }\n    list(src) {\n        let cap = this.rules.block.list.exec(src);\n        if (cap) {\n            let bull = cap[1].trim();\n            const isordered = bull.length > 1;\n            const list = {\n                type: 'list',\n                raw: '',\n                ordered: isordered,\n                start: isordered ? +bull.slice(0, -1) : '',\n                loose: false,\n                items: [],\n            };\n            bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n            if (this.options.pedantic) {\n                bull = isordered ? bull : '[*+-]';\n            }\n            // Get next list item\n            const itemRegex = this.rules.other.listItemRegex(bull);\n            let endsWithBlankLine = false;\n            // Check if current bullet point can start a new List Item\n            while (src) {\n                let endEarly = false;\n                let raw = '';\n                let itemContents = '';\n                if (!(cap = itemRegex.exec(src))) {\n                    break;\n                }\n                if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n                    break;\n                }\n                raw = cap[0];\n                src = src.substring(raw.length);\n                let line = cap[2].split('\\n', 1)[0].replace(this.rules.other.listReplaceTabs, (t) => ' '.repeat(3 * t.length));\n                let nextLine = src.split('\\n', 1)[0];\n                let blankLine = !line.trim();\n                let indent = 0;\n                if (this.options.pedantic) {\n                    indent = 2;\n                    itemContents = line.trimStart();\n                }\n                else if (blankLine) {\n                    indent = cap[1].length + 1;\n                }\n                else {\n                    indent = cap[2].search(this.rules.other.nonSpaceChar); // Find first non-space char\n                    indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n                    itemContents = line.slice(indent);\n                    indent += cap[1].length;\n                }\n                if (blankLine && this.rules.other.blankLine.test(nextLine)) { // Items begin with at most one blank line\n                    raw += nextLine + '\\n';\n                    src = src.substring(nextLine.length + 1);\n                    endEarly = true;\n                }\n                if (!endEarly) {\n                    const nextBulletRegex = this.rules.other.nextBulletRegex(indent);\n                    const hrRegex = this.rules.other.hrRegex(indent);\n                    const fencesBeginRegex = this.rules.other.fencesBeginRegex(indent);\n                    const headingBeginRegex = this.rules.other.headingBeginRegex(indent);\n                    const htmlBeginRegex = this.rules.other.htmlBeginRegex(indent);\n                    // Check if following lines should be included in List Item\n                    while (src) {\n                        const rawLine = src.split('\\n', 1)[0];\n                        let nextLineWithoutTabs;\n                        nextLine = rawLine;\n                        // Re-align to follow commonmark nesting rules\n                        if (this.options.pedantic) {\n                            nextLine = nextLine.replace(this.rules.other.listReplaceNesting, '  ');\n                            nextLineWithoutTabs = nextLine;\n                        }\n                        else {\n                            nextLineWithoutTabs = nextLine.replace(this.rules.other.tabCharGlobal, '    ');\n                        }\n                        // End list item if found code fences\n                        if (fencesBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new heading\n                        if (headingBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of html block\n                        if (htmlBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new bullet\n                        if (nextBulletRegex.test(nextLine)) {\n                            break;\n                        }\n                        // Horizontal rule found\n                        if (hrRegex.test(nextLine)) {\n                            break;\n                        }\n                        if (nextLineWithoutTabs.search(this.rules.other.nonSpaceChar) >= indent || !nextLine.trim()) { // Dedent if possible\n                            itemContents += '\\n' + nextLineWithoutTabs.slice(indent);\n                        }\n                        else {\n                            // not enough indentation\n                            if (blankLine) {\n                                break;\n                            }\n                            // paragraph continuation unless last line was a different block level element\n                            if (line.replace(this.rules.other.tabCharGlobal, '    ').search(this.rules.other.nonSpaceChar) >= 4) { // indented code block\n                                break;\n                            }\n                            if (fencesBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (headingBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (hrRegex.test(line)) {\n                                break;\n                            }\n                            itemContents += '\\n' + nextLine;\n                        }\n                        if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n                            blankLine = true;\n                        }\n                        raw += rawLine + '\\n';\n                        src = src.substring(rawLine.length + 1);\n                        line = nextLineWithoutTabs.slice(indent);\n                    }\n                }\n                if (!list.loose) {\n                    // If the previous item ended with a blank line, the list is loose\n                    if (endsWithBlankLine) {\n                        list.loose = true;\n                    }\n                    else if (this.rules.other.doubleBlankLine.test(raw)) {\n                        endsWithBlankLine = true;\n                    }\n                }\n                let istask = null;\n                let ischecked;\n                // Check for task list items\n                if (this.options.gfm) {\n                    istask = this.rules.other.listIsTask.exec(itemContents);\n                    if (istask) {\n                        ischecked = istask[0] !== '[ ] ';\n                        itemContents = itemContents.replace(this.rules.other.listReplaceTask, '');\n                    }\n                }\n                list.items.push({\n                    type: 'list_item',\n                    raw,\n                    task: !!istask,\n                    checked: ischecked,\n                    loose: false,\n                    text: itemContents,\n                    tokens: [],\n                });\n                list.raw += raw;\n            }\n            // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n            const lastItem = list.items.at(-1);\n            if (lastItem) {\n                lastItem.raw = lastItem.raw.trimEnd();\n                lastItem.text = lastItem.text.trimEnd();\n            }\n            else {\n                // not a list since there were no items\n                return;\n            }\n            list.raw = list.raw.trimEnd();\n            // Item child tokens handled here at end because we needed to have the final item to trim it first\n            for (let i = 0; i < list.items.length; i++) {\n                this.lexer.state.top = false;\n                list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n                if (!list.loose) {\n                    // Check if list should be loose\n                    const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n                    const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => this.rules.other.anyLine.test(t.raw));\n                    list.loose = hasMultipleLineBreaks;\n                }\n            }\n            // Set all items to loose if list is loose\n            if (list.loose) {\n                for (let i = 0; i < list.items.length; i++) {\n                    list.items[i].loose = true;\n                }\n            }\n            return list;\n        }\n    }\n    html(src) {\n        const cap = this.rules.block.html.exec(src);\n        if (cap) {\n            const token = {\n                type: 'html',\n                block: true,\n                raw: cap[0],\n                pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n                text: cap[0],\n            };\n            return token;\n        }\n    }\n    def(src) {\n        const cap = this.rules.block.def.exec(src);\n        if (cap) {\n            const tag = cap[1].toLowerCase().replace(this.rules.other.multipleSpaceGlobal, ' ');\n            const href = cap[2] ? cap[2].replace(this.rules.other.hrefBrackets, '$1').replace(this.rules.inline.anyPunctuation, '$1') : '';\n            const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, '$1') : cap[3];\n            return {\n                type: 'def',\n                tag,\n                raw: cap[0],\n                href,\n                title,\n            };\n        }\n    }\n    table(src) {\n        const cap = this.rules.block.table.exec(src);\n        if (!cap) {\n            return;\n        }\n        if (!this.rules.other.tableDelimiter.test(cap[2])) {\n            // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n            return;\n        }\n        const headers = splitCells(cap[1]);\n        const aligns = cap[2].replace(this.rules.other.tableAlignChars, '').split('|');\n        const rows = cap[3]?.trim() ? cap[3].replace(this.rules.other.tableRowBlankLine, '').split('\\n') : [];\n        const item = {\n            type: 'table',\n            raw: cap[0],\n            header: [],\n            align: [],\n            rows: [],\n        };\n        if (headers.length !== aligns.length) {\n            // header and align columns must be equal, rows can be different.\n            return;\n        }\n        for (const align of aligns) {\n            if (this.rules.other.tableAlignRight.test(align)) {\n                item.align.push('right');\n            }\n            else if (this.rules.other.tableAlignCenter.test(align)) {\n                item.align.push('center');\n            }\n            else if (this.rules.other.tableAlignLeft.test(align)) {\n                item.align.push('left');\n            }\n            else {\n                item.align.push(null);\n            }\n        }\n        for (let i = 0; i < headers.length; i++) {\n            item.header.push({\n                text: headers[i],\n                tokens: this.lexer.inline(headers[i]),\n                header: true,\n                align: item.align[i],\n            });\n        }\n        for (const row of rows) {\n            item.rows.push(splitCells(row, item.header.length).map((cell, i) => {\n                return {\n                    text: cell,\n                    tokens: this.lexer.inline(cell),\n                    header: false,\n                    align: item.align[i],\n                };\n            }));\n        }\n        return item;\n    }\n    lheading(src) {\n        const cap = this.rules.block.lheading.exec(src);\n        if (cap) {\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[2].charAt(0) === '=' ? 1 : 2,\n                text: cap[1],\n                tokens: this.lexer.inline(cap[1]),\n            };\n        }\n    }\n    paragraph(src) {\n        const cap = this.rules.block.paragraph.exec(src);\n        if (cap) {\n            const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n                ? cap[1].slice(0, -1)\n                : cap[1];\n            return {\n                type: 'paragraph',\n                raw: cap[0],\n                text,\n                tokens: this.lexer.inline(text),\n            };\n        }\n    }\n    text(src) {\n        const cap = this.rules.block.text.exec(src);\n        if (cap) {\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                tokens: this.lexer.inline(cap[0]),\n            };\n        }\n    }\n    escape(src) {\n        const cap = this.rules.inline.escape.exec(src);\n        if (cap) {\n            return {\n                type: 'escape',\n                raw: cap[0],\n                text: cap[1],\n            };\n        }\n    }\n    tag(src) {\n        const cap = this.rules.inline.tag.exec(src);\n        if (cap) {\n            if (!this.lexer.state.inLink && this.rules.other.startATag.test(cap[0])) {\n                this.lexer.state.inLink = true;\n            }\n            else if (this.lexer.state.inLink && this.rules.other.endATag.test(cap[0])) {\n                this.lexer.state.inLink = false;\n            }\n            if (!this.lexer.state.inRawBlock && this.rules.other.startPreScriptTag.test(cap[0])) {\n                this.lexer.state.inRawBlock = true;\n            }\n            else if (this.lexer.state.inRawBlock && this.rules.other.endPreScriptTag.test(cap[0])) {\n                this.lexer.state.inRawBlock = false;\n            }\n            return {\n                type: 'html',\n                raw: cap[0],\n                inLink: this.lexer.state.inLink,\n                inRawBlock: this.lexer.state.inRawBlock,\n                block: false,\n                text: cap[0],\n            };\n        }\n    }\n    link(src) {\n        const cap = this.rules.inline.link.exec(src);\n        if (cap) {\n            const trimmedUrl = cap[2].trim();\n            if (!this.options.pedantic && this.rules.other.startAngleBracket.test(trimmedUrl)) {\n                // commonmark requires matching angle brackets\n                if (!(this.rules.other.endAngleBracket.test(trimmedUrl))) {\n                    return;\n                }\n                // ending angle bracket cannot be escaped\n                const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n                if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n                    return;\n                }\n            }\n            else {\n                // find closing parenthesis\n                const lastParenIndex = findClosingBracket(cap[2], '()');\n                if (lastParenIndex === -2) {\n                    // more open parens than closed\n                    return;\n                }\n                if (lastParenIndex > -1) {\n                    const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n                    const linkLen = start + cap[1].length + lastParenIndex;\n                    cap[2] = cap[2].substring(0, lastParenIndex);\n                    cap[0] = cap[0].substring(0, linkLen).trim();\n                    cap[3] = '';\n                }\n            }\n            let href = cap[2];\n            let title = '';\n            if (this.options.pedantic) {\n                // split pedantic href and title\n                const link = this.rules.other.pedanticHrefTitle.exec(href);\n                if (link) {\n                    href = link[1];\n                    title = link[3];\n                }\n            }\n            else {\n                title = cap[3] ? cap[3].slice(1, -1) : '';\n            }\n            href = href.trim();\n            if (this.rules.other.startAngleBracket.test(href)) {\n                if (this.options.pedantic && !(this.rules.other.endAngleBracket.test(trimmedUrl))) {\n                    // pedantic allows starting angle bracket without ending angle bracket\n                    href = href.slice(1);\n                }\n                else {\n                    href = href.slice(1, -1);\n                }\n            }\n            return outputLink(cap, {\n                href: href ? href.replace(this.rules.inline.anyPunctuation, '$1') : href,\n                title: title ? title.replace(this.rules.inline.anyPunctuation, '$1') : title,\n            }, cap[0], this.lexer, this.rules);\n        }\n    }\n    reflink(src, links) {\n        let cap;\n        if ((cap = this.rules.inline.reflink.exec(src))\n            || (cap = this.rules.inline.nolink.exec(src))) {\n            const linkString = (cap[2] || cap[1]).replace(this.rules.other.multipleSpaceGlobal, ' ');\n            const link = links[linkString.toLowerCase()];\n            if (!link) {\n                const text = cap[0].charAt(0);\n                return {\n                    type: 'text',\n                    raw: text,\n                    text,\n                };\n            }\n            return outputLink(cap, link, cap[0], this.lexer, this.rules);\n        }\n    }\n    emStrong(src, maskedSrc, prevChar = '') {\n        let match = this.rules.inline.emStrongLDelim.exec(src);\n        if (!match)\n            return;\n        // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n        if (match[3] && prevChar.match(this.rules.other.unicodeAlphaNumeric))\n            return;\n        const nextChar = match[1] || match[2] || '';\n        if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n            // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n            const lLength = [...match[0]].length - 1;\n            let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n            const endReg = match[0][0] === '*' ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;\n            endReg.lastIndex = 0;\n            // Clip maskedSrc to same section of string as src (move to lexer?)\n            maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n            while ((match = endReg.exec(maskedSrc)) != null) {\n                rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n                if (!rDelim)\n                    continue; // skip single * in __abc*abc__\n                rLength = [...rDelim].length;\n                if (match[3] || match[4]) { // found another Left Delim\n                    delimTotal += rLength;\n                    continue;\n                }\n                else if (match[5] || match[6]) { // either Left or Right Delim\n                    if (lLength % 3 && !((lLength + rLength) % 3)) {\n                        midDelimTotal += rLength;\n                        continue; // CommonMark Emphasis Rules 9-10\n                    }\n                }\n                delimTotal -= rLength;\n                if (delimTotal > 0)\n                    continue; // Haven't found enough closing delimiters\n                // Remove extra characters. *a*** -> *a*\n                rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n                // char length can be >1 for unicode characters;\n                const lastCharLength = [...match[0]][0].length;\n                const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n                // Create `em` if smallest delimiter has odd char count. *a***\n                if (Math.min(lLength, rLength) % 2) {\n                    const text = raw.slice(1, -1);\n                    return {\n                        type: 'em',\n                        raw,\n                        text,\n                        tokens: this.lexer.inlineTokens(text),\n                    };\n                }\n                // Create 'strong' if smallest delimiter has even char count. **a***\n                const text = raw.slice(2, -2);\n                return {\n                    type: 'strong',\n                    raw,\n                    text,\n                    tokens: this.lexer.inlineTokens(text),\n                };\n            }\n        }\n    }\n    codespan(src) {\n        const cap = this.rules.inline.code.exec(src);\n        if (cap) {\n            let text = cap[2].replace(this.rules.other.newLineCharGlobal, ' ');\n            const hasNonSpaceChars = this.rules.other.nonSpaceChar.test(text);\n            const hasSpaceCharsOnBothEnds = this.rules.other.startingSpaceChar.test(text) && this.rules.other.endingSpaceChar.test(text);\n            if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n                text = text.substring(1, text.length - 1);\n            }\n            return {\n                type: 'codespan',\n                raw: cap[0],\n                text,\n            };\n        }\n    }\n    br(src) {\n        const cap = this.rules.inline.br.exec(src);\n        if (cap) {\n            return {\n                type: 'br',\n                raw: cap[0],\n            };\n        }\n    }\n    del(src) {\n        const cap = this.rules.inline.del.exec(src);\n        if (cap) {\n            return {\n                type: 'del',\n                raw: cap[0],\n                text: cap[2],\n                tokens: this.lexer.inlineTokens(cap[2]),\n            };\n        }\n    }\n    autolink(src) {\n        const cap = this.rules.inline.autolink.exec(src);\n        if (cap) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = cap[1];\n                href = 'mailto:' + text;\n            }\n            else {\n                text = cap[1];\n                href = text;\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text,\n                    },\n                ],\n            };\n        }\n    }\n    url(src) {\n        let cap;\n        if (cap = this.rules.inline.url.exec(src)) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = cap[0];\n                href = 'mailto:' + text;\n            }\n            else {\n                // do extended autolink path validation\n                let prevCapZero;\n                do {\n                    prevCapZero = cap[0];\n                    cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? '';\n                } while (prevCapZero !== cap[0]);\n                text = cap[0];\n                if (cap[1] === 'www.') {\n                    href = 'http://' + cap[0];\n                }\n                else {\n                    href = cap[0];\n                }\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text,\n                    },\n                ],\n            };\n        }\n    }\n    inlineText(src) {\n        const cap = this.rules.inline.text.exec(src);\n        if (cap) {\n            const escaped = this.lexer.state.inRawBlock;\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                escaped,\n            };\n        }\n    }\n}\n","import { _Tokenizer } from './Tokenizer.ts';\nimport { _defaults } from './defaults.ts';\nimport { other, block, inline } from './rules.ts';\n/**\n * Block Lexer\n */\nexport class _Lexer {\n    tokens;\n    options;\n    state;\n    tokenizer;\n    inlineQueue;\n    constructor(options) {\n        // TokenList cannot be created in one go\n        this.tokens = [];\n        this.tokens.links = Object.create(null);\n        this.options = options || _defaults;\n        this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n        this.tokenizer = this.options.tokenizer;\n        this.tokenizer.options = this.options;\n        this.tokenizer.lexer = this;\n        this.inlineQueue = [];\n        this.state = {\n            inLink: false,\n            inRawBlock: false,\n            top: true,\n        };\n        const rules = {\n            other,\n            block: block.normal,\n            inline: inline.normal,\n        };\n        if (this.options.pedantic) {\n            rules.block = block.pedantic;\n            rules.inline = inline.pedantic;\n        }\n        else if (this.options.gfm) {\n            rules.block = block.gfm;\n            if (this.options.breaks) {\n                rules.inline = inline.breaks;\n            }\n            else {\n                rules.inline = inline.gfm;\n            }\n        }\n        this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n    static get rules() {\n        return {\n            block,\n            inline,\n        };\n    }\n    /**\n     * Static Lex Method\n     */\n    static lex(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    static lexInline(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    lex(src) {\n        src = src.replace(other.carriageReturn, '\\n');\n        this.blockTokens(src, this.tokens);\n        for (let i = 0; i < this.inlineQueue.length; i++) {\n            const next = this.inlineQueue[i];\n            this.inlineTokens(next.src, next.tokens);\n        }\n        this.inlineQueue = [];\n        return this.tokens;\n    }\n    blockTokens(src, tokens = [], lastParagraphClipped = false) {\n        if (this.options.pedantic) {\n            src = src.replace(other.tabCharGlobal, '    ').replace(other.spaceLine, '');\n        }\n        while (src) {\n            let token;\n            if (this.options.extensions?.block?.some((extTokenizer) => {\n                if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return true;\n                }\n                return false;\n            })) {\n                continue;\n            }\n            // newline\n            if (token = this.tokenizer.space(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (token.raw.length === 1 && lastToken !== undefined) {\n                    // if there's a single \\n as a spacer, it's terminating the last line,\n                    // so move it there so that we don't get unnecessary paragraph tags\n                    lastToken.raw += '\\n';\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.code(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                // An indented code block cannot interrupt a paragraph.\n                if (lastToken?.type === 'paragraph' || lastToken?.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // fences\n            if (token = this.tokenizer.fences(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // heading\n            if (token = this.tokenizer.heading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // hr\n            if (token = this.tokenizer.hr(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // blockquote\n            if (token = this.tokenizer.blockquote(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // list\n            if (token = this.tokenizer.list(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // html\n            if (token = this.tokenizer.html(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // def\n            if (token = this.tokenizer.def(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'paragraph' || lastToken?.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.raw;\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else if (!this.tokens.links[token.tag]) {\n                    this.tokens.links[token.tag] = {\n                        href: token.href,\n                        title: token.title,\n                    };\n                }\n                continue;\n            }\n            // table (gfm)\n            if (token = this.tokenizer.table(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // lheading\n            if (token = this.tokenizer.lheading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // top-level paragraph\n            // prevent paragraph consuming extensions by clipping 'src' to extension start\n            let cutSrc = src;\n            if (this.options.extensions?.startBlock) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startBlock.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n                const lastToken = tokens.at(-1);\n                if (lastParagraphClipped && lastToken?.type === 'paragraph') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                lastParagraphClipped = cutSrc.length !== src.length;\n                src = src.substring(token.raw.length);\n                continue;\n            }\n            // text\n            if (token = this.tokenizer.text(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        this.state.top = true;\n        return tokens;\n    }\n    inline(src, tokens = []) {\n        this.inlineQueue.push({ src, tokens });\n        return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    inlineTokens(src, tokens = []) {\n        // String with links masked to avoid interference with em and strong\n        let maskedSrc = src;\n        let match = null;\n        // Mask out reflinks\n        if (this.tokens.links) {\n            const links = Object.keys(this.tokens.links);\n            if (links.length > 0) {\n                while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n                    if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n                        maskedSrc = maskedSrc.slice(0, match.index)\n                            + '[' + 'a'.repeat(match[0].length - 2) + ']'\n                            + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n                    }\n                }\n            }\n        }\n        // Mask out escaped characters\n        while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n        }\n        // Mask out other blocks\n        while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n        }\n        let keepPrevChar = false;\n        let prevChar = '';\n        while (src) {\n            if (!keepPrevChar) {\n                prevChar = '';\n            }\n            keepPrevChar = false;\n            let token;\n            // extensions\n            if (this.options.extensions?.inline?.some((extTokenizer) => {\n                if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return true;\n                }\n                return false;\n            })) {\n                continue;\n            }\n            // escape\n            if (token = this.tokenizer.escape(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // tag\n            if (token = this.tokenizer.tag(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // link\n            if (token = this.tokenizer.link(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // reflink, nolink\n            if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (token.type === 'text' && lastToken?.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // em & strong\n            if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.codespan(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // br\n            if (token = this.tokenizer.br(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // del (gfm)\n            if (token = this.tokenizer.del(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // autolink\n            if (token = this.tokenizer.autolink(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // url (gfm)\n            if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // text\n            // prevent inlineText consuming extensions by clipping 'src' to extension start\n            let cutSrc = src;\n            if (this.options.extensions?.startInline) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startInline.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (token = this.tokenizer.inlineText(cutSrc)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n                    prevChar = token.raw.slice(-1);\n                }\n                keepPrevChar = true;\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        return tokens;\n    }\n}\n","import { _defaults } from './defaults.ts';\nimport { cleanUrl, escape, } from './helpers.ts';\nimport { other } from './rules.ts';\n/**\n * Renderer\n */\nexport class _Renderer {\n    options;\n    parser; // set by the parser\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(token) {\n        return '';\n    }\n    code({ text, lang, escaped }) {\n        const langString = (lang || '').match(other.notSpaceStart)?.[0];\n        const code = text.replace(other.endingNewline, '') + '\\n';\n        if (!langString) {\n            return '<pre><code>'\n                + (escaped ? code : escape(code, true))\n                + '</code></pre>\\n';\n        }\n        return '<pre><code class=\"language-'\n            + escape(langString)\n            + '\">'\n            + (escaped ? code : escape(code, true))\n            + '</code></pre>\\n';\n    }\n    blockquote({ tokens }) {\n        const body = this.parser.parse(tokens);\n        return `<blockquote>\\n${body}</blockquote>\\n`;\n    }\n    html({ text }) {\n        return text;\n    }\n    heading({ tokens, depth }) {\n        return `<h${depth}>${this.parser.parseInline(tokens)}</h${depth}>\\n`;\n    }\n    hr(token) {\n        return '<hr>\\n';\n    }\n    list(token) {\n        const ordered = token.ordered;\n        const start = token.start;\n        let body = '';\n        for (let j = 0; j < token.items.length; j++) {\n            const item = token.items[j];\n            body += this.listitem(item);\n        }\n        const type = ordered ? 'ol' : 'ul';\n        const startAttr = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n        return '<' + type + startAttr + '>\\n' + body + '</' + type + '>\\n';\n    }\n    listitem(item) {\n        let itemBody = '';\n        if (item.task) {\n            const checkbox = this.checkbox({ checked: !!item.checked });\n            if (item.loose) {\n                if (item.tokens[0]?.type === 'paragraph') {\n                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + escape(item.tokens[0].tokens[0].text);\n                        item.tokens[0].tokens[0].escaped = true;\n                    }\n                }\n                else {\n                    item.tokens.unshift({\n                        type: 'text',\n                        raw: checkbox + ' ',\n                        text: checkbox + ' ',\n                        escaped: true,\n                    });\n                }\n            }\n            else {\n                itemBody += checkbox + ' ';\n            }\n        }\n        itemBody += this.parser.parse(item.tokens, !!item.loose);\n        return `<li>${itemBody}</li>\\n`;\n    }\n    checkbox({ checked }) {\n        return '<input '\n            + (checked ? 'checked=\"\" ' : '')\n            + 'disabled=\"\" type=\"checkbox\">';\n    }\n    paragraph({ tokens }) {\n        return `<p>${this.parser.parseInline(tokens)}</p>\\n`;\n    }\n    table(token) {\n        let header = '';\n        // header\n        let cell = '';\n        for (let j = 0; j < token.header.length; j++) {\n            cell += this.tablecell(token.header[j]);\n        }\n        header += this.tablerow({ text: cell });\n        let body = '';\n        for (let j = 0; j < token.rows.length; j++) {\n            const row = token.rows[j];\n            cell = '';\n            for (let k = 0; k < row.length; k++) {\n                cell += this.tablecell(row[k]);\n            }\n            body += this.tablerow({ text: cell });\n        }\n        if (body)\n            body = `<tbody>${body}</tbody>`;\n        return '<table>\\n'\n            + '<thead>\\n'\n            + header\n            + '</thead>\\n'\n            + body\n            + '</table>\\n';\n    }\n    tablerow({ text }) {\n        return `<tr>\\n${text}</tr>\\n`;\n    }\n    tablecell(token) {\n        const content = this.parser.parseInline(token.tokens);\n        const type = token.header ? 'th' : 'td';\n        const tag = token.align\n            ? `<${type} align=\"${token.align}\">`\n            : `<${type}>`;\n        return tag + content + `</${type}>\\n`;\n    }\n    /**\n     * span level renderer\n     */\n    strong({ tokens }) {\n        return `<strong>${this.parser.parseInline(tokens)}</strong>`;\n    }\n    em({ tokens }) {\n        return `<em>${this.parser.parseInline(tokens)}</em>`;\n    }\n    codespan({ text }) {\n        return `<code>${escape(text, true)}</code>`;\n    }\n    br(token) {\n        return '<br>';\n    }\n    del({ tokens }) {\n        return `<del>${this.parser.parseInline(tokens)}</del>`;\n    }\n    link({ href, title, tokens }) {\n        const text = this.parser.parseInline(tokens);\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = '<a href=\"' + href + '\"';\n        if (title) {\n            out += ' title=\"' + (escape(title)) + '\"';\n        }\n        out += '>' + text + '</a>';\n        return out;\n    }\n    image({ href, title, text }) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return escape(text);\n        }\n        href = cleanHref;\n        let out = `<img src=\"${href}\" alt=\"${text}\"`;\n        if (title) {\n            out += ` title=\"${escape(title)}\"`;\n        }\n        out += '>';\n        return out;\n    }\n    text(token) {\n        return 'tokens' in token && token.tokens\n            ? this.parser.parseInline(token.tokens)\n            : ('escaped' in token && token.escaped ? token.text : escape(token.text));\n    }\n}\n","/**\n * TextRenderer\n * returns only the textual part of the token\n */\nexport class _TextRenderer {\n    // no need for block level renderers\n    strong({ text }) {\n        return text;\n    }\n    em({ text }) {\n        return text;\n    }\n    codespan({ text }) {\n        return text;\n    }\n    del({ text }) {\n        return text;\n    }\n    html({ text }) {\n        return text;\n    }\n    text({ text }) {\n        return text;\n    }\n    link({ text }) {\n        return '' + text;\n    }\n    image({ text }) {\n        return '' + text;\n    }\n    br() {\n        return '';\n    }\n}\n","import { _Renderer } from './Renderer.ts';\nimport { _TextRenderer } from './TextRenderer.ts';\nimport { _defaults } from './defaults.ts';\n/**\n * Parsing & Compiling\n */\nexport class _Parser {\n    options;\n    renderer;\n    textRenderer;\n    constructor(options) {\n        this.options = options || _defaults;\n        this.options.renderer = this.options.renderer || new _Renderer();\n        this.renderer = this.options.renderer;\n        this.renderer.options = this.options;\n        this.renderer.parser = this;\n        this.textRenderer = new _TextRenderer();\n    }\n    /**\n     * Static Parse Method\n     */\n    static parse(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    static parseInline(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    parse(tokens, top = true) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const anyToken = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions?.renderers?.[anyToken.type]) {\n                const genericToken = anyToken;\n                const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n                if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            const token = anyToken;\n            switch (token.type) {\n                case 'space': {\n                    out += this.renderer.space(token);\n                    continue;\n                }\n                case 'hr': {\n                    out += this.renderer.hr(token);\n                    continue;\n                }\n                case 'heading': {\n                    out += this.renderer.heading(token);\n                    continue;\n                }\n                case 'code': {\n                    out += this.renderer.code(token);\n                    continue;\n                }\n                case 'table': {\n                    out += this.renderer.table(token);\n                    continue;\n                }\n                case 'blockquote': {\n                    out += this.renderer.blockquote(token);\n                    continue;\n                }\n                case 'list': {\n                    out += this.renderer.list(token);\n                    continue;\n                }\n                case 'html': {\n                    out += this.renderer.html(token);\n                    continue;\n                }\n                case 'paragraph': {\n                    out += this.renderer.paragraph(token);\n                    continue;\n                }\n                case 'text': {\n                    let textToken = token;\n                    let body = this.renderer.text(textToken);\n                    while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n                        textToken = tokens[++i];\n                        body += '\\n' + this.renderer.text(textToken);\n                    }\n                    if (top) {\n                        out += this.renderer.paragraph({\n                            type: 'paragraph',\n                            raw: body,\n                            text: body,\n                            tokens: [{ type: 'text', raw: body, text: body, escaped: true }],\n                        });\n                    }\n                    else {\n                        out += body;\n                    }\n                    continue;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    parseInline(tokens, renderer = this.renderer) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const anyToken = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions?.renderers?.[anyToken.type]) {\n                const ret = this.options.extensions.renderers[anyToken.type].call({ parser: this }, anyToken);\n                if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(anyToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            const token = anyToken;\n            switch (token.type) {\n                case 'escape': {\n                    out += renderer.text(token);\n                    break;\n                }\n                case 'html': {\n                    out += renderer.html(token);\n                    break;\n                }\n                case 'link': {\n                    out += renderer.link(token);\n                    break;\n                }\n                case 'image': {\n                    out += renderer.image(token);\n                    break;\n                }\n                case 'strong': {\n                    out += renderer.strong(token);\n                    break;\n                }\n                case 'em': {\n                    out += renderer.em(token);\n                    break;\n                }\n                case 'codespan': {\n                    out += renderer.codespan(token);\n                    break;\n                }\n                case 'br': {\n                    out += renderer.br(token);\n                    break;\n                }\n                case 'del': {\n                    out += renderer.del(token);\n                    break;\n                }\n                case 'text': {\n                    out += renderer.text(token);\n                    break;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n}\n","import { _defaults } from './defaults.ts';\nimport { _Lexer } from './Lexer.ts';\nimport { _Parser } from './Parser.ts';\nexport class _Hooks {\n    options;\n    block;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    static passThroughHooks = new Set([\n        'preprocess',\n        'postprocess',\n        'processAllTokens',\n    ]);\n    /**\n     * Process markdown before marked\n     */\n    preprocess(markdown) {\n        return markdown;\n    }\n    /**\n     * Process HTML after marked is finished\n     */\n    postprocess(html) {\n        return html;\n    }\n    /**\n     * Process all tokens before walk tokens\n     */\n    processAllTokens(tokens) {\n        return tokens;\n    }\n    /**\n     * Provide function to tokenize markdown\n     */\n    provideLexer() {\n        return this.block ? _Lexer.lex : _Lexer.lexInline;\n    }\n    /**\n     * Provide function to parse tokens\n     */\n    provideParser() {\n        return this.block ? _Parser.parse : _Parser.parseInline;\n    }\n}\n","import { _getDefaults } from './defaults.ts';\nimport { _Lexer } from './Lexer.ts';\nimport { _Parser } from './Parser.ts';\nimport { _Hooks } from './Hooks.ts';\nimport { _Renderer } from './Renderer.ts';\nimport { _Tokenizer } from './Tokenizer.ts';\nimport { _TextRenderer } from './TextRenderer.ts';\nimport { escape } from './helpers.ts';\nexport class Marked {\n    defaults = _getDefaults();\n    options = this.setOptions;\n    parse = this.parseMarkdown(true);\n    parseInline = this.parseMarkdown(false);\n    Parser = _Parser;\n    Renderer = _Renderer;\n    TextRenderer = _TextRenderer;\n    Lexer = _Lexer;\n    Tokenizer = _Tokenizer;\n    Hooks = _Hooks;\n    constructor(...args) {\n        this.use(...args);\n    }\n    /**\n     * Run callback for every token\n     */\n    walkTokens(tokens, callback) {\n        let values = [];\n        for (const token of tokens) {\n            values = values.concat(callback.call(this, token));\n            switch (token.type) {\n                case 'table': {\n                    const tableToken = token;\n                    for (const cell of tableToken.header) {\n                        values = values.concat(this.walkTokens(cell.tokens, callback));\n                    }\n                    for (const row of tableToken.rows) {\n                        for (const cell of row) {\n                            values = values.concat(this.walkTokens(cell.tokens, callback));\n                        }\n                    }\n                    break;\n                }\n                case 'list': {\n                    const listToken = token;\n                    values = values.concat(this.walkTokens(listToken.items, callback));\n                    break;\n                }\n                default: {\n                    const genericToken = token;\n                    if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n                        this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n                            const tokens = genericToken[childTokens].flat(Infinity);\n                            values = values.concat(this.walkTokens(tokens, callback));\n                        });\n                    }\n                    else if (genericToken.tokens) {\n                        values = values.concat(this.walkTokens(genericToken.tokens, callback));\n                    }\n                }\n            }\n        }\n        return values;\n    }\n    use(...args) {\n        const extensions = this.defaults.extensions || { renderers: {}, childTokens: {} };\n        args.forEach((pack) => {\n            // copy options to new object\n            const opts = { ...pack };\n            // set async to true if it was set to true before\n            opts.async = this.defaults.async || opts.async || false;\n            // ==-- Parse \"addon\" extensions --== //\n            if (pack.extensions) {\n                pack.extensions.forEach((ext) => {\n                    if (!ext.name) {\n                        throw new Error('extension name required');\n                    }\n                    if ('renderer' in ext) { // Renderer extensions\n                        const prevRenderer = extensions.renderers[ext.name];\n                        if (prevRenderer) {\n                            // Replace extension with func to run new extension but fall back if false\n                            extensions.renderers[ext.name] = function (...args) {\n                                let ret = ext.renderer.apply(this, args);\n                                if (ret === false) {\n                                    ret = prevRenderer.apply(this, args);\n                                }\n                                return ret;\n                            };\n                        }\n                        else {\n                            extensions.renderers[ext.name] = ext.renderer;\n                        }\n                    }\n                    if ('tokenizer' in ext) { // Tokenizer Extensions\n                        if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n                            throw new Error(\"extension level must be 'block' or 'inline'\");\n                        }\n                        const extLevel = extensions[ext.level];\n                        if (extLevel) {\n                            extLevel.unshift(ext.tokenizer);\n                        }\n                        else {\n                            extensions[ext.level] = [ext.tokenizer];\n                        }\n                        if (ext.start) { // Function to check for start of token\n                            if (ext.level === 'block') {\n                                if (extensions.startBlock) {\n                                    extensions.startBlock.push(ext.start);\n                                }\n                                else {\n                                    extensions.startBlock = [ext.start];\n                                }\n                            }\n                            else if (ext.level === 'inline') {\n                                if (extensions.startInline) {\n                                    extensions.startInline.push(ext.start);\n                                }\n                                else {\n                                    extensions.startInline = [ext.start];\n                                }\n                            }\n                        }\n                    }\n                    if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens\n                        extensions.childTokens[ext.name] = ext.childTokens;\n                    }\n                });\n                opts.extensions = extensions;\n            }\n            // ==-- Parse \"overwrite\" extensions --== //\n            if (pack.renderer) {\n                const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n                for (const prop in pack.renderer) {\n                    if (!(prop in renderer)) {\n                        throw new Error(`renderer '${prop}' does not exist`);\n                    }\n                    if (['options', 'parser'].includes(prop)) {\n                        // ignore options property\n                        continue;\n                    }\n                    const rendererProp = prop;\n                    const rendererFunc = pack.renderer[rendererProp];\n                    const prevRenderer = renderer[rendererProp];\n                    // Replace renderer with func to run extension, but fall back if false\n                    renderer[rendererProp] = (...args) => {\n                        let ret = rendererFunc.apply(renderer, args);\n                        if (ret === false) {\n                            ret = prevRenderer.apply(renderer, args);\n                        }\n                        return ret || '';\n                    };\n                }\n                opts.renderer = renderer;\n            }\n            if (pack.tokenizer) {\n                const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n                for (const prop in pack.tokenizer) {\n                    if (!(prop in tokenizer)) {\n                        throw new Error(`tokenizer '${prop}' does not exist`);\n                    }\n                    if (['options', 'rules', 'lexer'].includes(prop)) {\n                        // ignore options, rules, and lexer properties\n                        continue;\n                    }\n                    const tokenizerProp = prop;\n                    const tokenizerFunc = pack.tokenizer[tokenizerProp];\n                    const prevTokenizer = tokenizer[tokenizerProp];\n                    // Replace tokenizer with func to run extension, but fall back if false\n                    // @ts-expect-error cannot type tokenizer function dynamically\n                    tokenizer[tokenizerProp] = (...args) => {\n                        let ret = tokenizerFunc.apply(tokenizer, args);\n                        if (ret === false) {\n                            ret = prevTokenizer.apply(tokenizer, args);\n                        }\n                        return ret;\n                    };\n                }\n                opts.tokenizer = tokenizer;\n            }\n            // ==-- Parse Hooks extensions --== //\n            if (pack.hooks) {\n                const hooks = this.defaults.hooks || new _Hooks();\n                for (const prop in pack.hooks) {\n                    if (!(prop in hooks)) {\n                        throw new Error(`hook '${prop}' does not exist`);\n                    }\n                    if (['options', 'block'].includes(prop)) {\n                        // ignore options and block properties\n                        continue;\n                    }\n                    const hooksProp = prop;\n                    const hooksFunc = pack.hooks[hooksProp];\n                    const prevHook = hooks[hooksProp];\n                    if (_Hooks.passThroughHooks.has(prop)) {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (arg) => {\n                            if (this.defaults.async) {\n                                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                                    return prevHook.call(hooks, ret);\n                                });\n                            }\n                            const ret = hooksFunc.call(hooks, arg);\n                            return prevHook.call(hooks, ret);\n                        };\n                    }\n                    else {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (...args) => {\n                            let ret = hooksFunc.apply(hooks, args);\n                            if (ret === false) {\n                                ret = prevHook.apply(hooks, args);\n                            }\n                            return ret;\n                        };\n                    }\n                }\n                opts.hooks = hooks;\n            }\n            // ==-- Parse WalkTokens extensions --== //\n            if (pack.walkTokens) {\n                const walkTokens = this.defaults.walkTokens;\n                const packWalktokens = pack.walkTokens;\n                opts.walkTokens = function (token) {\n                    let values = [];\n                    values.push(packWalktokens.call(this, token));\n                    if (walkTokens) {\n                        values = values.concat(walkTokens.call(this, token));\n                    }\n                    return values;\n                };\n            }\n            this.defaults = { ...this.defaults, ...opts };\n        });\n        return this;\n    }\n    setOptions(opt) {\n        this.defaults = { ...this.defaults, ...opt };\n        return this;\n    }\n    lexer(src, options) {\n        return _Lexer.lex(src, options ?? this.defaults);\n    }\n    parser(tokens, options) {\n        return _Parser.parse(tokens, options ?? this.defaults);\n    }\n    parseMarkdown(blockType) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const parse = (src, options) => {\n            const origOpt = { ...options };\n            const opt = { ...this.defaults, ...origOpt };\n            const throwError = this.onError(!!opt.silent, !!opt.async);\n            // throw error if an extension set async to true but parse was called with async: false\n            if (this.defaults.async === true && origOpt.async === false) {\n                return throwError(new Error('marked(): The async option was set to true by an extension. Remove async: false from the parse options object to return a Promise.'));\n            }\n            // throw error in case of non string input\n            if (typeof src === 'undefined' || src === null) {\n                return throwError(new Error('marked(): input parameter is undefined or null'));\n            }\n            if (typeof src !== 'string') {\n                return throwError(new Error('marked(): input parameter is of type '\n                    + Object.prototype.toString.call(src) + ', string expected'));\n            }\n            if (opt.hooks) {\n                opt.hooks.options = opt;\n                opt.hooks.block = blockType;\n            }\n            const lexer = opt.hooks ? opt.hooks.provideLexer() : (blockType ? _Lexer.lex : _Lexer.lexInline);\n            const parser = opt.hooks ? opt.hooks.provideParser() : (blockType ? _Parser.parse : _Parser.parseInline);\n            if (opt.async) {\n                return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n                    .then(src => lexer(src, opt))\n                    .then(tokens => opt.hooks ? opt.hooks.processAllTokens(tokens) : tokens)\n                    .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n                    .then(tokens => parser(tokens, opt))\n                    .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n                    .catch(throwError);\n            }\n            try {\n                if (opt.hooks) {\n                    src = opt.hooks.preprocess(src);\n                }\n                let tokens = lexer(src, opt);\n                if (opt.hooks) {\n                    tokens = opt.hooks.processAllTokens(tokens);\n                }\n                if (opt.walkTokens) {\n                    this.walkTokens(tokens, opt.walkTokens);\n                }\n                let html = parser(tokens, opt);\n                if (opt.hooks) {\n                    html = opt.hooks.postprocess(html);\n                }\n                return html;\n            }\n            catch (e) {\n                return throwError(e);\n            }\n        };\n        return parse;\n    }\n    onError(silent, async) {\n        return (e) => {\n            e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n            if (silent) {\n                const msg = '<p>An error occurred:</p><pre>'\n                    + escape(e.message + '', true)\n                    + '</pre>';\n                if (async) {\n                    return Promise.resolve(msg);\n                }\n                return msg;\n            }\n            if (async) {\n                return Promise.reject(e);\n            }\n            throw e;\n        };\n    }\n}\n","import { _Lexer } from './Lexer.ts';\nimport { _Parser } from './Parser.ts';\nimport { _Tokenizer } from './Tokenizer.ts';\nimport { _Renderer } from './Renderer.ts';\nimport { _TextRenderer } from './TextRenderer.ts';\nimport { _Hooks } from './Hooks.ts';\nimport { Marked } from './Instance.ts';\nimport { _getDefaults, changeDefaults, _defaults, } from './defaults.ts';\nconst markedInstance = new Marked();\nexport function marked(src, opt) {\n    return markedInstance.parse(src, opt);\n}\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options =\n    marked.setOptions = function (options) {\n        markedInstance.setOptions(options);\n        marked.defaults = markedInstance.defaults;\n        changeDefaults(marked.defaults);\n        return marked;\n    };\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\nmarked.defaults = _defaults;\n/**\n * Use Extension\n */\nmarked.use = function (...args) {\n    markedInstance.use(...args);\n    marked.defaults = markedInstance.defaults;\n    changeDefaults(marked.defaults);\n    return marked;\n};\n/**\n * Run callback for every token\n */\nmarked.walkTokens = function (tokens, callback) {\n    return markedInstance.walkTokens(tokens, callback);\n};\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\nexport const options = marked.options;\nexport const setOptions = marked.setOptions;\nexport const use = marked.use;\nexport const walkTokens = marked.walkTokens;\nexport const parseInline = marked.parseInline;\nexport const parse = marked;\nexport const parser = _Parser.parse;\nexport const lexer = _Lexer.lex;\nexport { _defaults as defaults, _getDefaults as getDefaults } from './defaults.ts';\nexport { _Lexer as Lexer } from './Lexer.ts';\nexport { _Parser as Parser } from './Parser.ts';\nexport { _Tokenizer as Tokenizer } from './Tokenizer.ts';\nexport { _Renderer as Renderer } from './Renderer.ts';\nexport { _TextRenderer as TextRenderer } from './TextRenderer.ts';\nexport { _Hooks as Hooks } from './Hooks.ts';\nexport { Marked } from './Instance.ts';\n","const {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\nconst arraySplice = unapply(Array.prototype.splice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param func - The function to be wrapped and called.\n * @returns A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply<T>(\n  func: (thisArg: any, ...args: any[]) => T\n): (thisArg: any, ...args: any[]) => T {\n  return (thisArg: any, ...args: any[]): T => {\n    if (thisArg instanceof RegExp) {\n      thisArg.lastIndex = 0;\n    }\n\n    return apply(func, thisArg, args);\n  };\n}\n\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param func - The constructor function to be wrapped and called.\n * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct<T>(func: (...args: any[]) => T): (...args: any[]) => T {\n  return (...args: any[]): T => construct(func, args);\n}\n\n/**\n * Add properties to a lookup table\n *\n * @param set - The set to which elements will be added.\n * @param array - The array containing elements to be added to the set.\n * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns The modified set with added elements.\n */\nfunction addToSet(\n  set: Record<string, any>,\n  array: readonly any[],\n  transformCaseFunc: ReturnType<typeof unapply<string>> = stringToLowerCase\n): Record<string, any> {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          (array as any[])[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/**\n * Clean up an array to harden against CSPP\n *\n * @param array - The array to be cleaned.\n * @returns The cleaned version of the array\n */\nfunction cleanArray<T>(array: T[]): Array<T | null> {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n\n  return array;\n}\n\n/**\n * Shallow clone an object\n *\n * @param object - The object to be cloned.\n * @returns A new object that copies the original.\n */\nfunction clone<T extends Record<string, any>>(object: T): T {\n  const newObject = create(null);\n\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (\n        value &&\n        typeof value === 'object' &&\n        value.constructor === Object\n      ) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n\n  return newObject;\n}\n\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param object - The object to look up the getter function in its prototype chain.\n * @param prop - The property name for which to find the getter function.\n * @returns The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter<T extends Record<string, any>>(\n  object: T,\n  prop: string\n): ReturnType<typeof unapply<any>> | (() => null) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(): null {\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayLastIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  arraySplice,\n  // Object\n  entries,\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  clone,\n  create,\n  objectHasOwnProperty,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n  addToSet,\n  // Reflect\n  unapply,\n  unconstruct,\n};\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n] as const);\n\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n] as const);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n] as const);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n] as const);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n  'mprescripts',\n] as const);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n] as const);\n\nexport const text = freeze(['#text'] as const);\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'nonce',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'popover',\n  'popovertarget',\n  'popovertargetaction',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'wrap',\n  'xmlns',\n  'slot',\n] as const);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'amplitude',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'exponent',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'intercept',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'slope',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'tablevalues',\n  'targetx',\n  'targety',\n  'transform',\n  'transform-origin',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n] as const);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n] as const);\n","import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nexport const TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm); // eslint-disable-line unicorn/better-regex\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nexport const DOCTYPE_NAME = seal(/^html$/i);\nexport const CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n","/* eslint-disable @typescript-eslint/indent */\n\nimport type { TrustedHTML, TrustedTypesWindow } from 'trusted-types/lib';\nimport type { Config, UseProfilesConfig } from './config';\nimport * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  entries,\n  freeze,\n  arrayForEach,\n  arrayLastIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySplice,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n  create,\n  objectHasOwnProperty,\n} from './utils.js';\n\nexport type { Config } from './config';\n\ndeclare const VERSION: string;\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nconst NODE_TYPE = {\n  element: 1,\n  attribute: 2,\n  text: 3,\n  cdataSection: 4,\n  entityReference: 5, // Deprecated\n  entityNode: 6, // Deprecated\n  progressingInstruction: 7,\n  comment: 8,\n  document: 9,\n  documentType: 10,\n  documentFragment: 11,\n  notation: 12, // Deprecated\n};\n\nconst getGlobal = function (): WindowLike {\n  return typeof window === 'undefined' ? null : window;\n};\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param trustedTypes The policy factory.\n * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function (\n  trustedTypes: TrustedTypePolicyFactory,\n  purifyHostElement: HTMLScriptElement\n) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nconst _createHooksMap = function (): HooksMap {\n  return {\n    afterSanitizeAttributes: [],\n    afterSanitizeElements: [],\n    afterSanitizeShadowDOM: [],\n    beforeSanitizeAttributes: [],\n    beforeSanitizeElements: [],\n    beforeSanitizeShadowDOM: [],\n    uponSanitizeAttribute: [],\n    uponSanitizeElement: [],\n    uponSanitizeShadowNode: [],\n  };\n};\n\nfunction createDOMPurify(window: WindowLike = getGlobal()): DOMPurify {\n  const DOMPurify: DOMPurify = (root: WindowLike) => createDOMPurify(root);\n\n  DOMPurify.version = VERSION;\n\n  DOMPurify.removed = [];\n\n  if (\n    !window ||\n    !window.document ||\n    window.document.nodeType !== NODE_TYPE.document ||\n    !window.Element\n  ) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  let { document } = window;\n\n  const originalDocument = document;\n  const currentScript: HTMLScriptElement =\n    originalDocument.currentScript as HTMLScriptElement;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || (window as any).MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const remove = lookupGetter(ElementPrototype, 'remove');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let hooks = _createHooksMap();\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof entries === 'function' &&\n    typeof getParentNode === 'function' &&\n    implementation &&\n    implementation.createHTMLDocument !== undefined;\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /*\n   * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(\n    create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false,\n      },\n    })\n  );\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  let SAFE_FOR_XML = true;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES: UseProfilesConfig | false = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet(\n    {},\n    [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE],\n    stringToString\n  );\n\n  let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, [\n    'title',\n    'style',\n    'font',\n    'a',\n    'script',\n  ]);\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE: null | DOMParserSupportedType = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc: null | Parameters<typeof addToSet>[2] = null;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG: Config | null = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function (\n    testValue: unknown\n  ): testValue is Function | RegExp {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg: Config = {}): void {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? DEFAULT_PARSER_MEDIA_TYPE\n        : cfg.PARSER_MEDIA_TYPE;\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? stringToString\n        : stringToLowerCase;\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS')\n      ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc)\n      : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR')\n      ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc)\n      : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES')\n      ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString)\n      : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR')\n      ? addToSet(\n          clone(DEFAULT_URI_SAFE_ATTRIBUTES),\n          cfg.ADD_URI_SAFE_ATTR,\n          transformCaseFunc\n        )\n      : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS')\n      ? addToSet(\n          clone(DEFAULT_DATA_URI_TAGS),\n          cfg.ADD_DATA_URI_TAGS,\n          transformCaseFunc\n        )\n      : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS')\n      ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc)\n      : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS')\n      ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc)\n      : {};\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR')\n      ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc)\n      : {};\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES')\n      ? cfg.USE_PROFILES\n      : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || EXPRESSIONS.IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    MATHML_TEXT_INTEGRATION_POINTS =\n      cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n    HTML_INTEGRATION_POINTS =\n      cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements ===\n        'boolean'\n    ) {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements =\n        cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, TAGS.text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate(\n          'TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.'\n        );\n      }\n\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate(\n          'TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.'\n        );\n      }\n\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(\n          trustedTypes,\n          currentScript\n        );\n      }\n\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.svgDisallowed,\n  ]);\n  const ALL_MATHML_TAGS = addToSet({}, [\n    ...TAGS.mathMl,\n    ...TAGS.mathMlDisallowed,\n  ]);\n\n  /**\n   * @param element a DOM element whose namespace is being checked\n   * @returns Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element: Element): boolean {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // For XHTML and XML documents that support custom namespaces\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      ALLOWED_NAMESPACES[element.namespaceURI]\n    ) {\n      return true;\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param node a DOM node\n   */\n  const _forceRemove = function (node: Node): void {\n    arrayPush(DOMPurify.removed, { element: node });\n\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      getParentNode(node).removeChild(node);\n    } catch (_) {\n      remove(node);\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param name an Attribute name\n   * @param element a DOM node\n   */\n  const _removeAttribute = function (name: string, element: Element): void {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: element.getAttributeNode(name),\n        from: element,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: element,\n      });\n    }\n\n    element.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\" attributes\n    if (name === 'is') {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(element);\n        } catch (_) {}\n      } else {\n        try {\n          element.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param dirty - a string of dirty markup\n   * @return a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty: string): Document {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      NAMESPACE === HTML_NAMESPACE\n    ) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT\n          ? emptyHTML\n          : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param root The root element or node to start traversing on.\n   * @return The created NodeIterator\n   */\n  const _createNodeIterator = function (root: Node): NodeIterator {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT |\n        NodeFilter.SHOW_COMMENT |\n        NodeFilter.SHOW_TEXT |\n        NodeFilter.SHOW_PROCESSING_INSTRUCTION |\n        NodeFilter.SHOW_CDATA_SECTION,\n      null\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param element element to check for clobbering attacks\n   * @return true if clobbered, false if safe\n   */\n  const _isClobbered = function (element: Element): boolean {\n    return (\n      element instanceof HTMLFormElement &&\n      (typeof element.nodeName !== 'string' ||\n        typeof element.textContent !== 'string' ||\n        typeof element.removeChild !== 'function' ||\n        !(element.attributes instanceof NamedNodeMap) ||\n        typeof element.removeAttribute !== 'function' ||\n        typeof element.setAttribute !== 'function' ||\n        typeof element.namespaceURI !== 'string' ||\n        typeof element.insertBefore !== 'function' ||\n        typeof element.hasChildNodes !== 'function')\n    );\n  };\n\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param value object to check whether it's a DOM node\n   * @return true is object is a DOM node\n   */\n  const _isNode = function (value: unknown): value is Node {\n    return typeof Node === 'function' && value instanceof Node;\n  };\n\n  function _executeHooks<\n    T extends\n      | NodeHook\n      | ElementHook\n      | DocumentFragmentHook\n      | UponSanitizeElementHook\n      | UponSanitizeAttributeHook\n  >(hooks: T[], currentNode: Parameters<T>[0], data: Parameters<T>[1]): void {\n    arrayForEach(hooks, (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  }\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   * @param currentNode to check for permission to exist\n   * @return true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode: any): boolean {\n    let content = null;\n\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHooks(hooks.uponSanitizeElement, currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      currentNode.hasChildNodes() &&\n      !_isNode(currentNode.firstElementChild) &&\n      regExpTest(/<[/\\w!]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w!]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove any occurrence of processing instructions */\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove any kind of possibly harmful comments */\n    if (\n      SAFE_FOR_XML &&\n      currentNode.nodeType === NODE_TYPE.comment &&\n      regExpTest(/<[/\\w]/g, currentNode.data)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n          regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)\n        ) {\n          return false;\n        }\n\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)\n        ) {\n          return false;\n        }\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            const childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if (\n      (tagName === 'noscript' ||\n        tagName === 'noembed' ||\n        tagName === 'noframes') &&\n      regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr) => {\n        content = stringReplace(content, expr, ' ');\n      });\n\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param lcTag Lowercase tag name of containing element.\n   * @param lcName Lowercase attribute name.\n   * @param value Attribute value.\n   * @return Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (\n    lcTag: string,\n    lcName: string,\n    value: string\n  ): boolean {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        (_isBasicCustomElement(lcTag) &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))) &&\n          ((CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName)) ||\n            (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)))) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        (lcName === 'is' &&\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))\n      ) {\n        // If user has supplied a regexp or function in CUSTOM_ELEMENT_HANDLING.tagNameCheck, we need to also allow derived custom elements using the same tagName test.\n        // Additionally, we need to allow attributes passing the CUSTOM_ELEMENT_HANDLING.attributeNameCheck user has configured, as custom elements can define these at their own discretion.\n      } else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n    } else if (value) {\n      return false;\n    } else {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    }\n\n    return true;\n  };\n\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param tagName name of the tag of the node to sanitize\n   * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function (tagName: string): RegExpMatchArray {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode: Element): void {\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes || _isClobbered(currentNode)) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n      forceKeepAttr: undefined,\n    };\n    let l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const { name, namespaceURI, value: attrValue } = attr;\n      const lcName = transformCaseFunc(name);\n\n      let value = name === 'value' ? attrValue : stringTrim(attrValue);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n      value = hookEvent.attrValue;\n\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n\n      /* Work around a security issue with comments inside attributes */\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr) => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Handle attributes that require Trusted Types */\n      if (\n        trustedTypesPolicy &&\n        typeof trustedTypes === 'object' &&\n        typeof trustedTypes.getAttributeType === 'function'\n      ) {\n        if (namespaceURI) {\n          /* Namespaces are not yet supported, see https://bugs.chromium.org/p/chromium/issues/detail?id=1305293 */\n        } else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML': {\n              value = trustedTypesPolicy.createHTML(value);\n              break;\n            }\n\n            case 'TrustedScriptURL': {\n              value = trustedTypesPolicy.createScriptURL(value);\n              break;\n            }\n\n            default: {\n              break;\n            }\n          }\n        }\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        if (_isClobbered(currentNode)) {\n          _forceRemove(currentNode);\n        } else {\n          arrayPop(DOMPurify.removed);\n        }\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment: DocumentFragment): void {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n\n      /* Sanitize tags and elements */\n      _sanitizeElements(shadowNode);\n\n      /* Check attributes next */\n      _sanitizeAttributes(shadowNode);\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n  };\n\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg = {}) {\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if ((dirty as Node).nodeName) {\n        const tagName = transformCaseFunc((dirty as Node).nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate(\n            'root node is forbidden and cannot be sanitized in-place'\n          );\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (\n        importedNode.nodeType === NODE_TYPE.element &&\n        importedNode.nodeName === 'BODY'\n      ) {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Sanitize tags and elements */\n      _sanitizeElements(currentNode);\n\n      /* Check attributes next */\n      _sanitizeAttributes(currentNode);\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n    }\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (\n      WHOLE_DOCUMENT &&\n      ALLOWED_TAGS['!doctype'] &&\n      body.ownerDocument &&\n      body.ownerDocument.doctype &&\n      body.ownerDocument.doctype.name &&\n      regExpTest(EXPRESSIONS.DOCTYPE_NAME, body.ownerDocument.doctype.name)\n    ) {\n      serializedHTML =\n        '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr) => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  DOMPurify.setConfig = function (cfg = {}) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  DOMPurify.removeHook = function (entryPoint, hookFunction) {\n    if (hookFunction !== undefined) {\n      const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\n\n      return index === -1\n        ? undefined\n        : arraySplice(hooks[entryPoint], index, 1)[0];\n    }\n\n    return arrayPop(hooks[entryPoint]);\n  };\n\n  DOMPurify.removeHooks = function (entryPoint) {\n    hooks[entryPoint] = [];\n  };\n\n  DOMPurify.removeAllHooks = function () {\n    hooks = _createHooksMap();\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n\nexport interface DOMPurify {\n  /**\n   * Creates a DOMPurify instance using the given window-like object. Defaults to `window`.\n   */\n  (root?: WindowLike): DOMPurify;\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  version: string;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  removed: Array<RemovedElement | RemovedAttribute>;\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  isSupported: boolean;\n\n  /**\n   * Set the configuration once.\n   *\n   * @param cfg configuration object\n   */\n  setConfig(cfg?: Config): void;\n\n  /**\n   * Removes the configuration.\n   */\n  clearConfig(): void;\n\n  /**\n   * Provides core sanitation functionality.\n   *\n   * @param dirty string or DOM node\n   * @param cfg object\n   * @returns Sanitized TrustedHTML.\n   */\n  sanitize(\n    dirty: string | Node,\n    cfg: Config & { RETURN_TRUSTED_TYPE: true }\n  ): TrustedHTML;\n\n  /**\n   * Provides core sanitation functionality.\n   *\n   * @param dirty DOM node\n   * @param cfg object\n   * @returns Sanitized DOM node.\n   */\n  sanitize(dirty: Node, cfg: Config & { IN_PLACE: true }): Node;\n\n  /**\n   * Provides core sanitation functionality.\n   *\n   * @param dirty string or DOM node\n   * @param cfg object\n   * @returns Sanitized DOM node.\n   */\n  sanitize(dirty: string | Node, cfg: Config & { RETURN_DOM: true }): Node;\n\n  /**\n   * Provides core sanitation functionality.\n   *\n   * @param dirty string or DOM node\n   * @param cfg object\n   * @returns Sanitized document fragment.\n   */\n  sanitize(\n    dirty: string | Node,\n    cfg: Config & { RETURN_DOM_FRAGMENT: true }\n  ): DocumentFragment;\n\n  /**\n   * Provides core sanitation functionality.\n   *\n   * @param dirty string or DOM node\n   * @param cfg object\n   * @returns Sanitized string.\n   */\n  sanitize(dirty: string | Node, cfg?: Config): string;\n\n  /**\n   * Checks if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   *\n   * @param tag Tag name of containing element.\n   * @param attr Attribute name.\n   * @param value Attribute value.\n   * @returns Returns true if `value` is valid. Otherwise, returns false.\n   */\n  isValidAttribute(tag: string, attr: string, value: string): boolean;\n\n  /**\n   * Adds a DOMPurify hook.\n   *\n   * @param entryPoint entry point for the hook to add\n   * @param hookFunction function to execute\n   */\n  addHook(entryPoint: BasicHookName, hookFunction: NodeHook): void;\n\n  /**\n   * Adds a DOMPurify hook.\n   *\n   * @param entryPoint entry point for the hook to add\n   * @param hookFunction function to execute\n   */\n  addHook(entryPoint: ElementHookName, hookFunction: ElementHook): void;\n\n  /**\n   * Adds a DOMPurify hook.\n   *\n   * @param entryPoint entry point for the hook to add\n   * @param hookFunction function to execute\n   */\n  addHook(\n    entryPoint: DocumentFragmentHookName,\n    hookFunction: DocumentFragmentHook\n  ): void;\n\n  /**\n   * Adds a DOMPurify hook.\n   *\n   * @param entryPoint entry point for the hook to add\n   * @param hookFunction function to execute\n   */\n  addHook(\n    entryPoint: 'uponSanitizeElement',\n    hookFunction: UponSanitizeElementHook\n  ): void;\n\n  /**\n   * Adds a DOMPurify hook.\n   *\n   * @param entryPoint entry point for the hook to add\n   * @param hookFunction function to execute\n   */\n  addHook(\n    entryPoint: 'uponSanitizeAttribute',\n    hookFunction: UponSanitizeAttributeHook\n  ): void;\n\n  /**\n   * Remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if hook not specified)\n   *\n   * @param entryPoint entry point for the hook to remove\n   * @param hookFunction optional specific hook to remove\n   * @returns removed hook\n   */\n  removeHook(\n    entryPoint: BasicHookName,\n    hookFunction?: NodeHook\n  ): NodeHook | undefined;\n\n  /**\n   * Remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if hook not specified)\n   *\n   * @param entryPoint entry point for the hook to remove\n   * @param hookFunction optional specific hook to remove\n   * @returns removed hook\n   */\n  removeHook(\n    entryPoint: ElementHookName,\n    hookFunction?: ElementHook\n  ): ElementHook | undefined;\n\n  /**\n   * Remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if hook not specified)\n   *\n   * @param entryPoint entry point for the hook to remove\n   * @param hookFunction optional specific hook to remove\n   * @returns removed hook\n   */\n  removeHook(\n    entryPoint: DocumentFragmentHookName,\n    hookFunction?: DocumentFragmentHook\n  ): DocumentFragmentHook | undefined;\n\n  /**\n   * Remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if hook not specified)\n   *\n   * @param entryPoint entry point for the hook to remove\n   * @param hookFunction optional specific hook to remove\n   * @returns removed hook\n   */\n  removeHook(\n    entryPoint: 'uponSanitizeElement',\n    hookFunction?: UponSanitizeElementHook\n  ): UponSanitizeElementHook | undefined;\n\n  /**\n   * Remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if hook not specified)\n   *\n   * @param entryPoint entry point for the hook to remove\n   * @param hookFunction optional specific hook to remove\n   * @returns removed hook\n   */\n  removeHook(\n    entryPoint: 'uponSanitizeAttribute',\n    hookFunction?: UponSanitizeAttributeHook\n  ): UponSanitizeAttributeHook | undefined;\n\n  /**\n   * Removes all DOMPurify hooks at a given entryPoint\n   *\n   * @param entryPoint entry point for the hooks to remove\n   */\n  removeHooks(entryPoint: HookName): void;\n\n  /**\n   * Removes all DOMPurify hooks.\n   */\n  removeAllHooks(): void;\n}\n\n/**\n * An element removed by DOMPurify.\n */\nexport interface RemovedElement {\n  /**\n   * The element that was removed.\n   */\n  element: Node;\n}\n\n/**\n * An element removed by DOMPurify.\n */\nexport interface RemovedAttribute {\n  /**\n   * The attribute that was removed.\n   */\n  attribute: Attr | null;\n\n  /**\n   * The element that the attribute was removed.\n   */\n  from: Node;\n}\n\ntype BasicHookName =\n  | 'beforeSanitizeElements'\n  | 'afterSanitizeElements'\n  | 'uponSanitizeShadowNode';\ntype ElementHookName = 'beforeSanitizeAttributes' | 'afterSanitizeAttributes';\ntype DocumentFragmentHookName =\n  | 'beforeSanitizeShadowDOM'\n  | 'afterSanitizeShadowDOM';\ntype UponSanitizeElementHookName = 'uponSanitizeElement';\ntype UponSanitizeAttributeHookName = 'uponSanitizeAttribute';\n\ninterface HooksMap {\n  beforeSanitizeElements: NodeHook[];\n  afterSanitizeElements: NodeHook[];\n  beforeSanitizeShadowDOM: DocumentFragmentHook[];\n  uponSanitizeShadowNode: NodeHook[];\n  afterSanitizeShadowDOM: DocumentFragmentHook[];\n  beforeSanitizeAttributes: ElementHook[];\n  afterSanitizeAttributes: ElementHook[];\n  uponSanitizeElement: UponSanitizeElementHook[];\n  uponSanitizeAttribute: UponSanitizeAttributeHook[];\n}\n\nexport type HookName =\n  | BasicHookName\n  | ElementHookName\n  | DocumentFragmentHookName\n  | UponSanitizeElementHookName\n  | UponSanitizeAttributeHookName;\n\nexport type NodeHook = (\n  this: DOMPurify,\n  currentNode: Node,\n  hookEvent: null,\n  config: Config\n) => void;\n\nexport type ElementHook = (\n  this: DOMPurify,\n  currentNode: Element,\n  hookEvent: null,\n  config: Config\n) => void;\n\nexport type DocumentFragmentHook = (\n  this: DOMPurify,\n  currentNode: DocumentFragment,\n  hookEvent: null,\n  config: Config\n) => void;\n\nexport type UponSanitizeElementHook = (\n  this: DOMPurify,\n  currentNode: Node,\n  hookEvent: UponSanitizeElementHookEvent,\n  config: Config\n) => void;\n\nexport type UponSanitizeAttributeHook = (\n  this: DOMPurify,\n  currentNode: Element,\n  hookEvent: UponSanitizeAttributeHookEvent,\n  config: Config\n) => void;\n\nexport interface UponSanitizeElementHookEvent {\n  tagName: string;\n  allowedTags: Record<string, boolean>;\n}\n\nexport interface UponSanitizeAttributeHookEvent {\n  attrName: string;\n  attrValue: string;\n  keepAttr: boolean;\n  allowedAttributes: Record<string, boolean>;\n  forceKeepAttr: boolean | undefined;\n}\n\n/**\n * A `Window`-like object containing the properties and types that DOMPurify requires.\n */\nexport type WindowLike = Pick<\n  typeof globalThis,\n  | 'DocumentFragment'\n  | 'HTMLTemplateElement'\n  | 'Node'\n  | 'Element'\n  | 'NodeFilter'\n  | 'NamedNodeMap'\n  | 'HTMLFormElement'\n  | 'DOMParser'\n> & {\n  document?: Document;\n  MozNamedAttrMap?: typeof window.NamedNodeMap;\n} & Pick<TrustedTypesWindow, 'trustedTypes'>;\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { render } from \"./ChatView.vue?vue&type=template&id=fdbe0fd4\"\nimport script from \"./ChatView.vue?vue&type=script&lang=js\"\nexport * from \"./ChatView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","ref","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_el_button","type","size","onClick","$setup","createNewSession","default","_withCtx","_component_el_icon","_component_icon_plus","_","_hoisted_4","_component_el_input","modelValue","searchKeyword","_cache","$event","placeholder","clearable","prefix","_component_icon_search","_hoisted_5","_Fragment","_renderList","filteredSessions","session","id","_normalizeClass","active","currentSession","switchSession","_hoisted_7","_component_icon_chat_dot_round","_hoisted_8","_hoisted_9","_toDisplayString","title","_hoisted_10","_hoisted_11","formatDate","updatedAt","_hoisted_12","messageCount","_hoisted_13","_component_el_dropdown","trigger","onCommand","handleSessionAction","dropdown","_component_el_dropdown_menu","_component_el_dropdown_item","command","_createTextVNode","divided","_component_icon_more","_hoisted_6","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_component_el_tooltip","content","circle","showDataSourcePanel","_component_icon_data_line","showModelPanel","_component_icon_monitor","clearMessages","_component_icon_delete","_hoisted_18","messages","length","_hoisted_19","_hoisted_20","_component_icon_chat_square","message","index","role","_hoisted_21","_component_el_avatar","_createBlock","_component_icon_user","_component_icon_cpu","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","formatTime","timestamp","innerHTML","formatMessage","_hoisted_26","_hoisted_27","text","copyMessage","_component_icon_document_copy","rateMessage","_component_icon_thumb_up","_component_icon_thumb_down","_createCommentVNode","isTyping","_hoisted_28","_hoisted_29","_hoisted_30","uploadFile","_component_icon_upload","toggleVoiceInput","_component_icon_microphone","_hoisted_31","messageInput","rows","resize","onKeydown","_withKeys","_withModifiers","sendMessage","disabled","trim","_component_icon_position","_component_el_drawer","direction","footer","_hoisted_36","confirmDataSources","_hoisted_32","_component_el_checkbox_group","selectedDataSources","availableDataSources","source","_component_el_checkbox","value","_hoisted_33","_hoisted_34","name","_hoisted_35","_hoisted_41","confirmModel","_hoisted_37","_component_el_radio_group","selectedModel","availableModels","model","_component_el_radio","_hoisted_38","_hoisted_39","_hoisted_40","_component_el_dialog","renameDialogVisible","width","_hoisted_42","confirmRename","newSessionTitle","_typeof","o","Symbol","iterator","constructor","prototype","toPrimitive","t","r","e","i","call","TypeError","String","Number","toPropertyKey","_defineProperty","Object","defineProperty","enumerable","configurable","writable","_getDefaults","async","breaks","extensions","gfm","hooks","pedantic","renderer","silent","tokenizer","walkTokens","_defaults","changeDefaults","newDefaults","noopTest","exec","edit","regex","opt","obj","replace","val","valSource","other","caret","getRegex","RegExp","codeRemoveIndent","outputLinkReplace","indentCodeCompensation","beginningSpace","endingHash","startingSpaceChar","endingSpaceChar","nonSpaceChar","newLineCharGlobal","tabCharGlobal","multipleSpaceGlobal","blankLine","doubleBlankLine","blockquoteStart","blockquoteSetextReplace","blockquoteSetextReplace2","listReplaceTabs","listReplaceNesting","listIsTask","listReplaceTask","anyLine","hrefBrackets","tableDelimiter","tableAlignChars","tableRowBlankLine","tableAlignRight","tableAlignCenter","tableAlignLeft","startATag","endATag","startPreScriptTag","endPreScriptTag","startAngleBracket","endAngleBracket","pedanticHrefTitle","unicodeAlphaNumeric","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","unescapeTest","percentDecode","findPipe","splitPipe","slashPipe","carriageReturn","spaceLine","notSpaceStart","endingNewline","listItemRegex","bull","nextBulletRegex","indent","Math","min","hrRegex","fencesBeginRegex","headingBeginRegex","htmlBeginRegex","newline","blockCode","fences","hr","heading","bullet","lheadingCore","lheading","lheadingGfm","_paragraph","blockText","_blockLabel","def","list","_tag","_comment","html","paragraph","blockquote","blockNormal","code","table","gfmTable","blockGfm","blockPedantic","escape$1","inlineCode","br","inlineText","_punctuation","_punctuationOrSpace","_notPunctuationOrSpace","punctuation","_punctuationGfmStrongEm","_punctuationOrSpaceGfmStrongEm","_notPunctuationOrSpaceGfmStrongEm","blockSkip","emStrongLDelimCore","emStrongLDelim","emStrongLDelimGfm","emStrongRDelimAstCore","emStrongRDelimAst","emStrongRDelimAstGfm","emStrongRDelimUnd","anyPunctuation","autolink","_inlineComment","tag","_inlineLabel","link","reflink","nolink","reflinkSearch","inlineNormal","_backpedal","del","escape","url","inlinePedantic","inlineGfm","inlineBreaks","block","normal","inline","escapeReplacements","getEscapeReplacement","ch","encode","test","cleanUrl","href","encodeURI","splitCells","tableRow","count","row","match","offset","str","escaped","curr","cells","split","shift","at","pop","splice","push","rtrim","c","invert","l","suffLen","currChar","charAt","slice","findClosingBracket","b","indexOf","level","outputLink","cap","raw","lexer","rules","state","inLink","token","tokens","inlineTokens","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","join","_Tokenizer","options","this","space","src","codeBlockStyle","lang","trimmed","depth","lines","inBlockquote","currentLines","currentRaw","currentText","top","blockTokens","lastToken","oldToken","newText","newToken","substring","isordered","ordered","start","loose","items","itemRegex","endsWithBlankLine","endEarly","itemContents","line","repeat","nextLine","trimStart","search","rawLine","nextLineWithoutTabs","ischecked","istask","task","checked","lastItem","trimEnd","spacers","filter","hasMultipleLineBreaks","some","pre","toLowerCase","headers","aligns","item","header","align","cell","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","links","linkString","emStrong","maskedSrc","prevChar","nextChar","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","lastIndex","lastCharLength","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","prevCapZero","_Lexer","create","inlineQueue","lex","lexInline","next","lastParagraphClipped","extTokenizer","undefined","cutSrc","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","errMsg","charCodeAt","console","error","Error","keys","includes","lastIndexOf","keepPrevChar","startInline","_Renderer","langString","body","parser","parse","parseInline","j","listitem","startAttr","itemBody","checkbox","unshift","tablecell","tablerow","k","strong","em","cleanHref","out","image","_TextRenderer","_Parser","textRenderer","anyToken","renderers","genericToken","ret","textToken","_Hooks","preprocess","markdown","postprocess","processAllTokens","provideLexer","provideParser","Set","Marked","args","setOptions","parseMarkdown","use","callback","values","concat","tableToken","listToken","defaults","childTokens","flat","pack","opts","ext","prevRenderer","apply","extLevel","prop","rendererProp","rendererFunc","tokenizerProp","tokenizerFunc","prevTokenizer","hooksProp","hooksFunc","prevHook","passThroughHooks","has","arg","Promise","resolve","then","packWalktokens","blockType","origOpt","throwError","onError","toString","all","catch","msg","reject","markedInstance","marked","getDefaults","Parser","Renderer","TextRenderer","Lexer","Tokenizer","Hooks","entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","construct","Reflect","x","fun","thisValue","Func","arrayForEach","unapply","Array","arrayLastIndexOf","arrayPop","arrayPush","arraySplice","stringToLowerCase","stringToString","stringMatch","stringReplace","stringIndexOf","stringTrim","objectHasOwnProperty","hasOwnProperty","regExpTest","typeErrorCreate","unconstruct","func","thisArg","_len","arguments","_key","_len2","_key2","addToSet","set","array","transformCaseFunc","element","lcElement","cleanArray","isPropertyExist","clone","object","newObject","property","isArray","lookupGetter","desc","get","fallbackValue","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","CUSTOM_ELEMENT","NODE_TYPE","attribute","cdataSection","entityReference","entityNode","progressingInstruction","comment","document","documentType","documentFragment","notation","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","purifyHostElement","createPolicy","suffix","ATTR_NAME","hasAttribute","getAttribute","policyName","createHTML","createScriptURL","scriptUrl","warn","_createHooksMap","afterSanitizeAttributes","afterSanitizeElements","afterSanitizeShadowDOM","beforeSanitizeAttributes","beforeSanitizeElements","beforeSanitizeShadowDOM","uponSanitizeAttribute","uponSanitizeElement","uponSanitizeShadowNode","createDOMPurify","DOMPurify","root","version","removed","nodeType","Element","isSupported","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","remove","getNextSibling","getChildNodes","getParentNode","template","createElement","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","createHTMLDocument","EXPRESSIONS","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","SAFE_FOR_XML","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","tbody","TRUSTED_TYPES_POLICY","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","namespaceURI","parentTagName","Boolean","_forceRemove","removeChild","_removeAttribute","getAttributeNode","from","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","insertBefore","createTextNode","childNodes","_createNodeIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","SHOW_PROCESSING_INSTRUCTION","SHOW_CDATA_SECTION","_isClobbered","nodeName","textContent","attributes","hasChildNodes","_isNode","_executeHooks","currentNode","data","hook","_sanitizeElements","allowedTags","firstElementChild","_isBasicCustomElement","parentNode","childCount","childClone","__removalCount","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","forceKeepAttr","attr","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","returnNode","appendChild","firstChild","nodeIterator","shadowroot","shadowrootmode","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","addHook","entryPoint","hookFunction","removeHook","removeHooks","removeAllHooks","getRandomValues","purify","rnds8","Uint8Array","rng","crypto","bind","msCrypto","validate","uuid","REGEX","byteToHex","substr","stringify","arr","v4","buf","rnds","random","components","Plus","Search","ChatDotRound","More","DataLine","Monitor","Delete","ChatSquare","User","Cpu","DocumentCopy","ThumbUp","ThumbDown","Upload","Microphone","Position","setup","useRouter","sessionToRename","messageContainer","sessions","createdAt","dataSourceIds","modelId","computed","keyword","newSession","uuidv4","Date","toISOString","loadSessionMessages","nextTick","scrollToBottom","sessionId","sessionIndex","findIndex","s","setTimeout","userMessage","aiMessage","generateAIResponse","ElMessage","input","userInput","navigator","clipboard","writeText","rating","ElMessageBox","confirm","confirmButtonText","cancelButtonText","exportSession","deleteSession","warning","exportData","dataStr","JSON","dataUri","encodeURIComponent","exportFileName","linkElement","click","dateString","date","now","toDateString","toLocaleTimeString","hour","minute","yesterday","setDate","getDate","getFullYear","toLocaleDateString","month","day","scrollTop","scrollHeight","watch","deep","onMounted","__exports__","render"],"sourceRoot":""}