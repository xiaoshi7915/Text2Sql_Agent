{"version":3,"file":"js/883.bff1a53c.js","mappings":"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","sources":["webpack://wenshu-mcp-frontend/./src/views/datasource/DataSourceList.vue","webpack://wenshu-mcp-frontend/./src/views/datasource/DataSourceList.vue?551b"],"sourcesContent":["<template>\n  <div class=\"datasource-list-container\">\n    <div class=\"header-actions\">\n      <el-button type=\"primary\" @click=\"handleCreate\">\n        <el-icon><icon-plus /></el-icon>\n        <span>新建数据源</span>\n      </el-button>\n      <el-input\n        v-model=\"searchKeyword\"\n        placeholder=\"搜索数据源名称\"\n        class=\"search-input\"\n        clearable\n        @clear=\"handleSearch\"\n        @input=\"handleSearch\"\n      >\n        <template #prefix>\n          <el-icon><icon-search /></el-icon>\n        </template>\n      </el-input>\n    </div>\n    \n    <!-- 筛选区域 -->\n    <div class=\"filter-container\">\n      <el-select v-model=\"filters.type\" placeholder=\"数据库类型\" clearable @change=\"handleFilter\">\n        <el-option v-for=\"item in dbTypeOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\n      </el-select>\n      <el-select v-model=\"filters.status\" placeholder=\"连接状态\" clearable @change=\"handleFilter\">\n        <el-option label=\"已连接\" value=\"connected\" />\n        <el-option label=\"未连接\" value=\"disconnected\" />\n      </el-select>\n    </div>\n    \n    <!-- 数据源列表 -->\n    <el-table\n      v-loading=\"loading\"\n      :data=\"filteredDataSources\"\n      border\n      style=\"width: 100%\"\n      :header-cell-style=\"{backgroundColor: '#f5f7fa'}\"\n    >\n      <el-table-column label=\"数据源名称\" prop=\"name\" min-width=\"150\">\n        <template #default=\"{ row }\">\n          <div class=\"name-container\">\n            <el-tag size=\"small\" :type=\"getDbTypeTag(row.type)\">{{ row.type }}</el-tag>\n            <span class=\"name-text\">{{ row.name }}</span>\n          </div>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"主机地址\" prop=\"host\" min-width=\"150\" />\n      <el-table-column label=\"数据库名\" prop=\"database\" min-width=\"120\" />\n      <el-table-column label=\"表数量\" prop=\"tableCount\" width=\"100\" align=\"center\" />\n      <el-table-column label=\"连接状态\" width=\"120\" align=\"center\">\n        <template #default=\"{ row }\">\n          <el-tag :type=\"row.status === 'connected' ? 'success' : 'danger'\" size=\"small\">\n            {{ row.status === 'connected' ? '已连接' : '未连接' }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"最后更新时间\" width=\"180\" align=\"center\">\n        <template #default=\"{ row }\">\n          {{ formatDate(row.updatedAt) }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" width=\"240\" align=\"center\">\n        <template #default=\"{ row }\">\n          <el-button size=\"small\" type=\"primary\" plain @click=\"handleEdit(row)\">\n            <el-icon><icon-edit /></el-icon>\n            <span>编辑</span>\n          </el-button>\n          <el-button size=\"small\" type=\"success\" plain @click=\"handleTest(row)\">\n            <el-icon><icon-connection /></el-icon>\n            <span>测试</span>\n          </el-button>\n          <el-button size=\"small\" type=\"danger\" plain @click=\"handleDelete(row)\">\n            <el-icon><icon-delete /></el-icon>\n            <span>删除</span>\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    \n    <!-- 分页组件 -->\n    <div class=\"pagination-container\">\n      <el-pagination\n        v-model:current-page=\"currentPage\"\n        v-model:page-size=\"pageSize\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        :total=\"totalCount\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage, ElMessageBox } from 'element-plus'\n\nexport default {\n  name: 'DataSourceList',\n  \n  setup() {\n    // 路由实例\n    const router = useRouter()\n    \n    // 加载状态\n    const loading = ref(false)\n    \n    // 搜索和筛选\n    const searchKeyword = ref('')\n    const filters = ref({\n      type: '',\n      status: ''\n    })\n    \n    // 分页数据\n    const currentPage = ref(1)\n    const pageSize = ref(10)\n    const totalCount = ref(0)\n    \n    // 数据源列表（模拟数据）\n    const dataSources = ref([\n      {\n        id: 1,\n        name: '生产环境MySQL数据库',\n        type: 'MySQL',\n        host: '192.168.1.100',\n        port: 3306,\n        database: 'production_db',\n        username: 'root',\n        password: '******',\n        tableCount: 32,\n        status: 'connected',\n        createdAt: '2023-11-05T08:30:00Z',\n        updatedAt: '2023-11-06T15:45:00Z'\n      },\n      {\n        id: 2,\n        name: '测试环境PostgreSQL',\n        type: 'PostgreSQL',\n        host: '192.168.1.101',\n        port: 5432,\n        database: 'test_db',\n        username: 'postgres',\n        password: '******',\n        tableCount: 18,\n        status: 'connected',\n        createdAt: '2023-11-03T10:20:00Z',\n        updatedAt: '2023-11-06T14:30:00Z'\n      },\n      {\n        id: 3,\n        name: '开发环境SQL Server',\n        type: 'SQLServer',\n        host: '192.168.1.102',\n        port: 1433,\n        database: 'dev_db',\n        username: 'sa',\n        password: '******',\n        tableCount: 25,\n        status: 'disconnected',\n        createdAt: '2023-11-02T14:10:00Z',\n        updatedAt: '2023-11-04T09:15:00Z'\n      },\n      {\n        id: 4,\n        name: '历史数据Oracle',\n        type: 'Oracle',\n        host: '192.168.1.103',\n        port: 1521,\n        database: 'history_db',\n        username: 'system',\n        password: '******',\n        tableCount: 45,\n        status: 'connected',\n        createdAt: '2023-10-28T11:25:00Z',\n        updatedAt: '2023-11-05T16:40:00Z'\n      },\n      {\n        id: 5,\n        name: '分析环境MySQL',\n        type: 'MySQL',\n        host: '192.168.1.104',\n        port: 3306,\n        database: 'analytics_db',\n        username: 'analytics_user',\n        password: '******',\n        tableCount: 12,\n        status: 'disconnected',\n        createdAt: '2023-11-01T13:50:00Z',\n        updatedAt: '2023-11-03T10:25:00Z'\n      }\n    ])\n    \n    // 数据库类型选项\n    const dbTypeOptions = [\n      { value: 'MySQL', label: 'MySQL' },\n      { value: 'PostgreSQL', label: 'PostgreSQL' },\n      { value: 'SQLServer', label: 'SQL Server' },\n      { value: 'Oracle', label: 'Oracle' }\n    ]\n    \n    // 根据筛选条件过滤数据源列表\n    const filteredDataSources = computed(() => {\n      let result = [...dataSources.value]\n      \n      // 关键字搜索\n      if (searchKeyword.value) {\n        const keyword = searchKeyword.value.toLowerCase()\n        result = result.filter(item => \n          item.name.toLowerCase().includes(keyword) || \n          item.host.toLowerCase().includes(keyword) ||\n          item.database.toLowerCase().includes(keyword)\n        )\n      }\n      \n      // 数据库类型筛选\n      if (filters.value.type) {\n        result = result.filter(item => item.type === filters.value.type)\n      }\n      \n      // 连接状态筛选\n      if (filters.value.status) {\n        result = result.filter(item => item.status === filters.value.status)\n      }\n      \n      // 计算总数\n      totalCount.value = result.length\n      \n      // 分页处理\n      const startIndex = (currentPage.value - 1) * pageSize.value\n      return result.slice(startIndex, startIndex + pageSize.value)\n    })\n    \n    // 格式化日期\n    const formatDate = (dateString) => {\n      if (!dateString) return '-'\n      const date = new Date(dateString)\n      return date.toLocaleString()\n    }\n    \n    // 获取数据库类型标签样式\n    const getDbTypeTag = (type) => {\n      const typeMap = {\n        'MySQL': 'primary',\n        'PostgreSQL': 'success',\n        'SQLServer': 'warning',\n        'Oracle': 'danger'\n      }\n      return typeMap[type] || 'info'\n    }\n    \n    // 搜索处理\n    const handleSearch = () => {\n      currentPage.value = 1\n    }\n    \n    // 筛选处理\n    const handleFilter = () => {\n      currentPage.value = 1\n    }\n    \n    // 分页大小变化处理\n    const handleSizeChange = (size) => {\n      pageSize.value = size\n      currentPage.value = 1\n    }\n    \n    // 当前页变化处理\n    const handleCurrentChange = (page) => {\n      currentPage.value = page\n    }\n    \n    // 创建数据源\n    const handleCreate = () => {\n      router.push('/datasource/create')\n    }\n    \n    // 编辑数据源\n    const handleEdit = (row) => {\n      router.push(`/datasource/edit/${row.id}`)\n    }\n    \n    // 测试数据源连接\n    const handleTest = (row) => {\n      loading.value = true\n      \n      // 模拟API调用\n      setTimeout(() => {\n        loading.value = false\n        \n        // 显示成功消息\n        if (row.status === 'connected') {\n          ElMessage({\n            message: `成功连接到数据源 ${row.name}`,\n            type: 'success'\n          })\n        } else {\n          ElMessage({\n            message: `无法连接到数据源 ${row.name}，请检查配置`,\n            type: 'error'\n          })\n        }\n      }, 1000)\n    }\n    \n    // 删除数据源\n    const handleDelete = (row) => {\n      ElMessageBox.confirm(\n        `确定要删除数据源 \"${row.name}\" 吗？`,\n        '警告',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      )\n        .then(() => {\n          // 模拟删除操作\n          dataSources.value = dataSources.value.filter(item => item.id !== row.id)\n          \n          ElMessage({\n            type: 'success',\n            message: '删除成功'\n          })\n        })\n        .catch(() => {\n          // 取消删除\n        })\n    }\n    \n    // 获取数据源列表\n    const fetchDataSources = () => {\n      loading.value = true\n      \n      // 模拟API调用\n      setTimeout(() => {\n        // 实际项目中应该调用API获取数据\n        // dataSources.value = response.data\n        \n        loading.value = false\n      }, 500)\n    }\n    \n    // 组件加载时获取数据\n    onMounted(() => {\n      fetchDataSources()\n    })\n    \n    return {\n      loading,\n      searchKeyword,\n      filters,\n      currentPage,\n      pageSize,\n      totalCount,\n      dataSources,\n      filteredDataSources,\n      dbTypeOptions,\n      formatDate,\n      getDbTypeTag,\n      handleSearch,\n      handleFilter,\n      handleSizeChange,\n      handleCurrentChange,\n      handleCreate,\n      handleEdit,\n      handleTest,\n      handleDelete\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.datasource-list-container {\n  .header-actions {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 20px;\n    \n    .search-input {\n      width: 300px;\n    }\n  }\n  \n  .filter-container {\n    margin-bottom: 20px;\n    display: flex;\n    gap: 15px;\n    \n    .el-select {\n      width: 180px;\n    }\n  }\n  \n  .name-container {\n    display: flex;\n    align-items: center;\n    \n    .name-text {\n      margin-left: 8px;\n      font-weight: bold;\n    }\n  }\n  \n  .pagination-container {\n    margin-top: 20px;\n    display: flex;\n    justify-content: flex-end;\n  }\n}\n\n@media (max-width: 768px) {\n  .datasource-list-container {\n    .header-actions {\n      flex-direction: column;\n      \n      .el-button {\n        margin-bottom: 10px;\n      }\n      \n      .search-input {\n        width: 100%;\n      }\n    }\n    \n    .filter-container {\n      flex-direction: column;\n      \n      .el-select {\n        width: 100%;\n      }\n    }\n  }\n}\n</style> ","import { render } from \"./DataSourceList.vue?vue&type=template&id=2673e245&scoped=true\"\nimport script from \"./DataSourceList.vue?vue&type=script&lang=js\"\nexport * from \"./DataSourceList.vue?vue&type=script&lang=js\"\n\nimport \"./DataSourceList.vue?vue&type=style&index=0&id=2673e245&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2673e245\"]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_button","type","onClick","$setup","handleCreate","default","_withCtx","_component_el_icon","_component_icon_plus","_","_component_el_input","modelValue","searchKeyword","_cache","$event","placeholder","clearable","onClear","handleSearch","onInput","prefix","_component_icon_search","_hoisted_3","_component_el_select","filters","onChange","handleFilter","_Fragment","_renderList","dbTypeOptions","item","_createBlock","_component_el_option","key","value","label","status","_component_el_table","data","filteredDataSources","border","style","backgroundColor","_component_el_table_column","prop","row","_hoisted_4","_component_el_tag","size","getDbTypeTag","_createTextVNode","_toDisplayString","_hoisted_5","name","width","align","formatDate","updatedAt","plain","handleEdit","_component_icon_edit","handleTest","_component_icon_connection","handleDelete","_component_icon_delete","loading","_hoisted_6","_component_el_pagination","currentPage","pageSize","total","totalCount","layout","onSizeChange","handleSizeChange","onCurrentChange","handleCurrentChange","setup","router","useRouter","ref","dataSources","id","host","port","database","username","password","tableCount","createdAt","computed","result","keyword","toLowerCase","filter","includes","length","startIndex","slice","dateString","date","Date","toLocaleString","typeMap","page","push","setTimeout","ElMessage","message","ElMessageBox","confirm","confirmButtonText","cancelButtonText","then","catch","fetchDataSources","onMounted","__exports__","render"],"sourceRoot":""}