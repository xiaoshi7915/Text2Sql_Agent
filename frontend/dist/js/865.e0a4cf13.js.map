{"version":3,"file":"js/865.e0a4cf13.js","mappings":"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","sources":["webpack://wenshu-mcp-frontend/./src/views/model/ModelList.vue","webpack://wenshu-mcp-frontend/./src/views/model/ModelList.vue?e20d"],"sourcesContent":["<template>\n  <div class=\"model-list-container\">\n    <div class=\"header-actions\">\n      <el-button type=\"primary\" @click=\"handleCreate\">\n        <el-icon><icon-plus /></el-icon>\n        <span>新建模型</span>\n      </el-button>\n      <el-input\n        v-model=\"searchKeyword\"\n        placeholder=\"搜索模型名称\"\n        class=\"search-input\"\n        clearable\n        @clear=\"handleSearch\"\n        @input=\"handleSearch\"\n      >\n        <template #prefix>\n          <el-icon><icon-search /></el-icon>\n        </template>\n      </el-input>\n    </div>\n    \n    <!-- 筛选区域 -->\n    <div class=\"filter-container\">\n      <el-select v-model=\"filters.type\" placeholder=\"模型类型\" clearable @change=\"handleFilter\">\n        <el-option v-for=\"item in modelTypeOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\n      </el-select>\n      <el-select v-model=\"filters.status\" placeholder=\"状态\" clearable @change=\"handleFilter\">\n        <el-option label=\"活跃\" value=\"active\" />\n        <el-option label=\"离线\" value=\"offline\" />\n      </el-select>\n    </div>\n    \n    <!-- 模型列表 -->\n    <el-table\n      v-loading=\"loading\"\n      :data=\"filteredModels\"\n      border\n      style=\"width: 100%\"\n      :header-cell-style=\"{backgroundColor: '#f5f7fa'}\"\n    >\n      <el-table-column label=\"模型名称\" prop=\"name\" min-width=\"150\">\n        <template #default=\"{ row }\">\n          <div class=\"name-container\">\n            <el-tag size=\"small\" :type=\"getModelTypeTag(row.type)\">{{ row.type }}</el-tag>\n            <span class=\"name-text\">{{ row.name }}</span>\n          </div>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"版本\" prop=\"version\" width=\"100\" align=\"center\" />\n      <el-table-column label=\"端点\" prop=\"endpoint\" min-width=\"180\" />\n      <el-table-column label=\"平均响应时间\" width=\"120\" align=\"center\">\n        <template #default=\"{ row }\">\n          {{ row.avgResponseTime }} ms\n        </template>\n      </el-table-column>\n      <el-table-column label=\"状态\" width=\"100\" align=\"center\">\n        <template #default=\"{ row }\">\n          <el-tag :type=\"row.status === 'active' ? 'success' : 'danger'\" size=\"small\">\n            {{ row.status === 'active' ? '活跃' : '离线' }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"上次更新时间\" width=\"180\" align=\"center\">\n        <template #default=\"{ row }\">\n          {{ formatDate(row.updatedAt) }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" width=\"260\" align=\"center\">\n        <template #default=\"{ row }\">\n          <el-button size=\"small\" type=\"primary\" plain @click=\"handleEdit(row)\">\n            <el-icon><icon-edit /></el-icon>\n            <span>编辑</span>\n          </el-button>\n          <el-button size=\"small\" type=\"success\" plain @click=\"handleTest(row)\">\n            <el-icon><icon-connection /></el-icon>\n            <span>测试</span>\n          </el-button>\n          <el-button size=\"small\" :type=\"row.status === 'active' ? 'warning' : 'success'\" plain @click=\"handleToggleStatus(row)\">\n            <el-icon v-if=\"row.status === 'active'\"><icon-switch /></el-icon>\n            <el-icon v-else><icon-open /></el-icon>\n            <span>{{ row.status === 'active' ? '停用' : '启用' }}</span>\n          </el-button>\n          <el-button size=\"small\" type=\"danger\" plain @click=\"handleDelete(row)\">\n            <el-icon><icon-delete /></el-icon>\n            <span>删除</span>\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    \n    <!-- 分页组件 -->\n    <div class=\"pagination-container\">\n      <el-pagination\n        v-model:current-page=\"currentPage\"\n        v-model:page-size=\"pageSize\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        :total=\"totalCount\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage, ElMessageBox } from 'element-plus'\n\nexport default {\n  name: 'ModelList',\n  \n  setup() {\n    // 路由实例\n    const router = useRouter()\n    \n    // 加载状态\n    const loading = ref(false)\n    \n    // 搜索和筛选\n    const searchKeyword = ref('')\n    const filters = ref({\n      type: '',\n      status: ''\n    })\n    \n    // 分页数据\n    const currentPage = ref(1)\n    const pageSize = ref(10)\n    const totalCount = ref(0)\n    \n    // 模型列表（模拟数据）\n    const models = ref([\n      {\n        id: 1,\n        name: 'DeepSeek-SQL-7B',\n        type: 'LLM',\n        version: '1.0.0',\n        endpoint: 'https://api.deepseek.com/v1/sql',\n        avgResponseTime: 235,\n        status: 'active',\n        parameters: {\n          temperature: 0.7,\n          maxTokens: 2048,\n          topP: 0.95\n        },\n        createdAt: '2023-11-01T08:30:00Z',\n        updatedAt: '2023-11-06T15:45:00Z'\n      },\n      {\n        id: 2,\n        name: 'GitHub Copilot for SQL',\n        type: 'LLM',\n        version: '2.1.0',\n        endpoint: 'https://api.github.com/copilot/sql',\n        avgResponseTime: 312,\n        status: 'active',\n        parameters: {\n          temperature: 0.5,\n          maxTokens: 1024,\n          topP: 0.9\n        },\n        createdAt: '2023-10-15T10:20:00Z',\n        updatedAt: '2023-11-05T14:30:00Z'\n      },\n      {\n        id: 3,\n        name: 'Local Database Extractor',\n        type: 'Extractor',\n        version: '0.2.1',\n        endpoint: 'http://localhost:8000/extract',\n        avgResponseTime: 450,\n        status: 'offline',\n        parameters: {\n          batchSize: 100,\n          timeout: 30000\n        },\n        createdAt: '2023-11-02T14:10:00Z',\n        updatedAt: '2023-11-04T09:15:00Z'\n      }\n    ])\n    \n    // 模型类型选项\n    const modelTypeOptions = [\n      { value: 'LLM', label: '大语言模型' },\n      { value: 'Extractor', label: '数据抽取器' },\n      { value: 'Optimizer', label: '查询优化器' }\n    ]\n    \n    // 根据筛选条件过滤模型列表\n    const filteredModels = computed(() => {\n      let result = [...models.value]\n      \n      // 关键字搜索\n      if (searchKeyword.value) {\n        const keyword = searchKeyword.value.toLowerCase()\n        result = result.filter(item => \n          item.name.toLowerCase().includes(keyword) || \n          item.endpoint.toLowerCase().includes(keyword)\n        )\n      }\n      \n      // 模型类型筛选\n      if (filters.value.type) {\n        result = result.filter(item => item.type === filters.value.type)\n      }\n      \n      // 状态筛选\n      if (filters.value.status) {\n        result = result.filter(item => item.status === filters.value.status)\n      }\n      \n      // 计算总数\n      totalCount.value = result.length\n      \n      // 分页处理\n      const startIndex = (currentPage.value - 1) * pageSize.value\n      return result.slice(startIndex, startIndex + pageSize.value)\n    })\n    \n    // 格式化日期\n    const formatDate = (dateString) => {\n      if (!dateString) return '-'\n      const date = new Date(dateString)\n      return date.toLocaleString()\n    }\n    \n    // 获取模型类型标签样式\n    const getModelTypeTag = (type) => {\n      const typeMap = {\n        'LLM': 'primary',\n        'Extractor': 'success',\n        'Optimizer': 'warning'\n      }\n      return typeMap[type] || 'info'\n    }\n    \n    // 搜索处理\n    const handleSearch = () => {\n      currentPage.value = 1\n    }\n    \n    // 筛选处理\n    const handleFilter = () => {\n      currentPage.value = 1\n    }\n    \n    // 分页大小变化处理\n    const handleSizeChange = (size) => {\n      pageSize.value = size\n      currentPage.value = 1\n    }\n    \n    // 当前页变化处理\n    const handleCurrentChange = (page) => {\n      currentPage.value = page\n    }\n    \n    // 创建模型\n    const handleCreate = () => {\n      router.push('/model/create')\n    }\n    \n    // 编辑模型\n    const handleEdit = (row) => {\n      router.push(`/model/edit/${row.id}`)\n    }\n    \n    // 测试模型连接\n    const handleTest = (row) => {\n      loading.value = true\n      \n      // 模拟API调用\n      setTimeout(() => {\n        loading.value = false\n        \n        // 显示成功消息\n        if (row.status === 'active') {\n          ElMessage({\n            message: `模型 ${row.name} 连接成功，响应时间: ${row.avgResponseTime}ms`,\n            type: 'success'\n          })\n        } else {\n          ElMessage({\n            message: `模型 ${row.name} 当前离线，无法连接`,\n            type: 'error'\n          })\n        }\n      }, 1000)\n    }\n    \n    // 切换模型状态\n    const handleToggleStatus = (row) => {\n      const newStatus = row.status === 'active' ? 'offline' : 'active'\n      const statusText = newStatus === 'active' ? '启用' : '停用'\n      \n      ElMessageBox.confirm(\n        `确定要${statusText}模型 \"${row.name}\" 吗？`,\n        '提示',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      )\n        .then(() => {\n          // 模拟API调用\n          loading.value = true\n          \n          setTimeout(() => {\n            // 更新本地数据\n            const model = models.value.find(item => item.id === row.id)\n            if (model) {\n              model.status = newStatus\n            }\n            \n            loading.value = false\n            \n            ElMessage({\n              message: `模型${statusText}成功`,\n              type: 'success'\n            })\n          }, 500)\n        })\n        .catch(() => {\n          // 取消操作\n        })\n    }\n    \n    // 删除模型\n    const handleDelete = (row) => {\n      ElMessageBox.confirm(\n        `确定要删除模型 \"${row.name}\" 吗？`,\n        '警告',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      )\n        .then(() => {\n          // 模拟删除操作\n          models.value = models.value.filter(item => item.id !== row.id)\n          \n          ElMessage({\n            type: 'success',\n            message: '删除成功'\n          })\n        })\n        .catch(() => {\n          // 取消删除\n        })\n    }\n    \n    // 获取模型列表\n    const fetchModels = () => {\n      loading.value = true\n      \n      // 模拟API调用\n      setTimeout(() => {\n        // 实际项目中应该调用API获取数据\n        // models.value = response.data\n        \n        loading.value = false\n      }, 500)\n    }\n    \n    // 组件加载时获取数据\n    onMounted(() => {\n      fetchModels()\n    })\n    \n    return {\n      loading,\n      searchKeyword,\n      filters,\n      currentPage,\n      pageSize,\n      totalCount,\n      models,\n      filteredModels,\n      modelTypeOptions,\n      formatDate,\n      getModelTypeTag,\n      handleSearch,\n      handleFilter,\n      handleSizeChange,\n      handleCurrentChange,\n      handleCreate,\n      handleEdit,\n      handleTest,\n      handleToggleStatus,\n      handleDelete\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.model-list-container {\n  .header-actions {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 20px;\n    \n    .search-input {\n      width: 300px;\n    }\n  }\n  \n  .filter-container {\n    margin-bottom: 20px;\n    display: flex;\n    gap: 15px;\n    \n    .el-select {\n      width: 180px;\n    }\n  }\n  \n  .name-container {\n    display: flex;\n    align-items: center;\n    \n    .name-text {\n      margin-left: 8px;\n      font-weight: bold;\n    }\n  }\n  \n  .pagination-container {\n    margin-top: 20px;\n    display: flex;\n    justify-content: flex-end;\n  }\n}\n\n@media (max-width: 768px) {\n  .model-list-container {\n    .header-actions {\n      flex-direction: column;\n      \n      .el-button {\n        margin-bottom: 10px;\n      }\n      \n      .search-input {\n        width: 100%;\n      }\n    }\n    \n    .filter-container {\n      flex-direction: column;\n      \n      .el-select {\n        width: 100%;\n      }\n    }\n  }\n}\n</style> ","import { render } from \"./ModelList.vue?vue&type=template&id=620e0204&scoped=true\"\nimport script from \"./ModelList.vue?vue&type=script&lang=js\"\nexport * from \"./ModelList.vue?vue&type=script&lang=js\"\n\nimport \"./ModelList.vue?vue&type=style&index=0&id=620e0204&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-620e0204\"]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_button","type","onClick","$setup","handleCreate","default","_withCtx","_component_el_icon","_component_icon_plus","_","_component_el_input","modelValue","searchKeyword","_cache","$event","placeholder","clearable","onClear","handleSearch","onInput","prefix","_component_icon_search","_hoisted_3","_component_el_select","filters","onChange","handleFilter","_Fragment","_renderList","modelTypeOptions","item","_createBlock","_component_el_option","key","value","label","status","_component_el_table","data","filteredModels","border","style","backgroundColor","_component_el_table_column","prop","row","_hoisted_4","_component_el_tag","size","getModelTypeTag","_createTextVNode","_toDisplayString","_hoisted_5","name","width","align","avgResponseTime","formatDate","updatedAt","plain","handleEdit","_component_icon_edit","handleTest","_component_icon_connection","handleToggleStatus","_component_icon_switch","_component_icon_open","handleDelete","_component_icon_delete","loading","_hoisted_6","_component_el_pagination","currentPage","pageSize","total","totalCount","layout","onSizeChange","handleSizeChange","onCurrentChange","handleCurrentChange","setup","router","useRouter","ref","models","id","version","endpoint","parameters","temperature","maxTokens","topP","createdAt","batchSize","timeout","computed","result","keyword","toLowerCase","filter","includes","length","startIndex","slice","dateString","date","Date","toLocaleString","typeMap","page","push","setTimeout","ElMessage","message","newStatus","statusText","ElMessageBox","confirm","confirmButtonText","cancelButtonText","then","model","find","catch","fetchModels","onMounted","__exports__","render"],"sourceRoot":""}